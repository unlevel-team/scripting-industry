"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkscripting_industry"] = self["webpackChunkscripting_industry"] || []).push([["index"],{

/***/ "./node_modules/@vaadin/router/dist/vaadin-router.js":
/*!***********************************************************!*\
  !*** ./node_modules/@vaadin/router/dist/vaadin-router.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Resolver\": () => (/* binding */ Resolver),\n/* harmony export */   \"Router\": () => (/* binding */ Router)\n/* harmony export */ });\nfunction toArray(objectOrArray) {\n  objectOrArray = objectOrArray || [];\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nfunction log(msg) {\n  return `[Vaadin.Router] ${msg}`;\n}\n\nfunction logValue(value) {\n  if (typeof value !== 'object') {\n    return String(value);\n  }\n\n  const stringType = Object.prototype.toString.call(value).match(/ (.*)\\]$/)[1];\n  if (stringType === 'Object' || stringType === 'Array') {\n    return `${stringType} ${JSON.stringify(value)}`;\n  } else {\n    return stringType;\n  }\n}\n\nconst MODULE = 'module';\nconst NOMODULE = 'nomodule';\nconst bundleKeys = [MODULE, NOMODULE];\n\nfunction ensureBundle(src) {\n  if (!src.match(/.+\\.[m]?js$/)) {\n    throw new Error(\n      log(`Unsupported type for bundle \"${src}\": .js or .mjs expected.`)\n    );\n  }\n}\n\nfunction ensureRoute(route) {\n  if (!route || !isString(route.path)) {\n    throw new Error(\n      log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`)\n    );\n  }\n\n  const bundle = route.bundle;\n\n  const stringKeys = ['component', 'redirect', 'bundle'];\n  if (\n    !isFunction(route.action) &&\n    !Array.isArray(route.children) &&\n    !isFunction(route.children) &&\n    !isObject(bundle) &&\n    !stringKeys.some(key => isString(route[key]))\n  ) {\n    throw new Error(\n      log(\n        `Expected route config \"${route.path}\" to include either \"${stringKeys.join('\", \"')}\" ` +\n        `or \"action\" function but none found.`\n      )\n    );\n  }\n\n  if (bundle) {\n    if (isString(bundle)) {\n      ensureBundle(bundle);\n    } else if (!bundleKeys.some(key => key in bundle)) {\n      throw new Error(\n        log('Expected route bundle to include either \"' + NOMODULE + '\" or \"' + MODULE + '\" keys, or both')\n      );\n    } else {\n      bundleKeys.forEach(key => key in bundle && ensureBundle(bundle[key]));\n    }\n  }\n\n  if (route.redirect) {\n    ['bundle', 'component'].forEach(overriddenProp => {\n      if (overriddenProp in route) {\n        console.warn(\n          log(\n            `Route config \"${route.path}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` +\n            `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`\n          )\n        );\n      }\n    });\n  }\n}\n\nfunction ensureRoutes(routes) {\n  toArray(routes).forEach(route => ensureRoute(route));\n}\n\nfunction loadScript(src, key) {\n  let script = document.head.querySelector('script[src=\"' + src + '\"][async]');\n  if (!script) {\n    script = document.createElement('script');\n    script.setAttribute('src', src);\n    if (key === MODULE) {\n      script.setAttribute('type', MODULE);\n    } else if (key === NOMODULE) {\n      script.setAttribute(NOMODULE, '');\n    }\n    script.async = true;\n  }\n  return new Promise((resolve, reject) => {\n    script.onreadystatechange = script.onload = e => {\n      script.__dynamicImportLoaded = true;\n      resolve(e);\n    };\n    script.onerror = e => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      reject(e);\n    };\n    if (script.parentNode === null) {\n      document.head.appendChild(script);\n    } else if (script.__dynamicImportLoaded) {\n      resolve();\n    }\n  });\n}\n\nfunction loadBundle(bundle) {\n  if (isString(bundle)) {\n    return loadScript(bundle);\n  } else {\n    return Promise.race(\n      bundleKeys\n        .filter(key => key in bundle)\n        .map(key => loadScript(bundle[key], key))\n    );\n  }\n}\n\nfunction fireRouterEvent(type, detail) {\n  return !window.dispatchEvent(new CustomEvent(\n    `vaadin-router-${type}`,\n    {cancelable: type === 'go', detail}\n  ));\n}\n\nfunction isObject(o) {\n  // guard against null passing the typeof check\n  return typeof o === 'object' && !!o;\n}\n\nfunction isFunction(f) {\n  return typeof f === 'function';\n}\n\nfunction isString(s) {\n  return typeof s === 'string';\n}\n\nfunction getNotFoundError(context) {\n  const error = new Error(log(`Page not found (${context.pathname})`));\n  error.context = context;\n  error.code = 404;\n  return error;\n}\n\nconst notFoundResult = new (class NotFoundResult {})();\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nfunction getAnchorOrigin(anchor) {\n  // IE11: on HTTP and HTTPS the default port is not included into\n  // window.location.origin, so won't include it here either.\n  const port = anchor.port;\n  const protocol = anchor.protocol;\n  const defaultHttp = protocol === 'http:' && port === '80';\n  const defaultHttps = protocol === 'https:' && port === '443';\n  const host = (defaultHttp || defaultHttps)\n    ? anchor.hostname // does not include the port number (e.g. www.example.org)\n    : anchor.host; // does include the port number (e.g. www.example.org:80)\n  return `${protocol}//${host}`;\n}\n\n// The list of checks is not complete:\n//  - SVG support is missing\n//  - the 'rel' attribute is not considered\nfunction vaadinRouterGlobalClickHandler(event) {\n  // ignore the click if the default action is prevented\n  if (event.defaultPrevented) {\n    return;\n  }\n\n  // ignore the click if not with the primary mouse button\n  if (event.button !== 0) {\n    return;\n  }\n\n  // ignore the click if a modifier key is pressed\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\n    return;\n  }\n\n  // find the <a> element that the click is at (or within)\n  let anchor = event.target;\n  const path = event.composedPath\n    ? event.composedPath()\n    : (event.path || []);\n\n  // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\n  for (let i = 0; i < path.length; i++) {\n    const target = path[i];\n    if (target.nodeName && target.nodeName.toLowerCase() === 'a') {\n      anchor = target;\n      break;\n    }\n  }\n\n  while (anchor && anchor.nodeName.toLowerCase() !== 'a') {\n    anchor = anchor.parentNode;\n  }\n\n  // ignore the click if not at an <a> element\n  if (!anchor || anchor.nodeName.toLowerCase() !== 'a') {\n    return;\n  }\n\n  // ignore the click if the <a> element has a non-default target\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'download' attribute\n  if (anchor.hasAttribute('download')) {\n    return;\n  }\n\n  // ignore the click if the <a> element has the 'router-ignore' attribute\n  if (anchor.hasAttribute('router-ignore')) {\n    return;\n  }\n\n  // ignore the click if the target URL is a fragment on the current page\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\n    return;\n  }\n\n  // ignore the click if the target is external to the app\n  // In IE11 HTMLAnchorElement does not have the `origin` property\n  const origin = anchor.origin || getAnchorOrigin(anchor);\n  if (origin !== window.location.origin) {\n    return;\n  }\n\n  // if none of the above, convert the click into a navigation event\n  const {pathname, search, hash} = anchor;\n  if (fireRouterEvent('go', {pathname, search, hash})) {\n    event.preventDefault();\n    // for a click event, the scroll is reset to the top position.\n    if (event && event.type === 'click') {\n      window.scrollTo(0, 0);\n    }\n  }\n}\n\n/**\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\n * into Vaadin Router navigation events.\n *\n * Only regular clicks on in-app links are translated (primary mouse button, no\n * modifier keys, the target href is within the app's URL space).\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst CLICK = {\n  activate() {\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\n  },\n\n  inactivate() {\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\n  }\n};\n\n// PopStateEvent constructor shim\nconst isIE = /Trident/.test(navigator.userAgent);\n\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\nif (isIE && !isFunction(window.PopStateEvent)) {\n  window.PopStateEvent = function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    e.state = params.state || null;\n    return e;\n  };\n  window.PopStateEvent.prototype = window.Event.prototype;\n}\n\nfunction vaadinRouterGlobalPopstateHandler(event) {\n  if (event.state === 'vaadin-router-ignore') {\n    return;\n  }\n  const {pathname, search, hash} = window.location;\n  fireRouterEvent('go', {pathname, search, hash});\n}\n\n/**\n * A navigation trigger for Vaadin Router that translates popstate events into\n * Vaadin Router navigation events.\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\nconst POPSTATE = {\n  activate() {\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  },\n\n  inactivate() {\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  }\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/';\nvar DEFAULT_DELIMITERS = './';\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER;\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS;\n  var pathEscaped = false;\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      pathEscaped = true;\n      continue\n    }\n\n    var prev = '';\n    var next = str[index];\n    var name = res[2];\n    var capture = res[3];\n    var group = res[4];\n    var modifier = res[5];\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1;\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k];\n        path = path.slice(0, k);\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n      pathEscaped = false;\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = prev || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    });\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index));\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (data, options) {\n    var path = '';\n    var encode = (options && options.encode) || encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var segment;\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token);\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment;\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix;\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      });\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {};\n\n  var strict = options.strict;\n  var start = options.start !== false;\n  var end = options.end !== false;\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS;\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');\n  var route = start ? '^' : '';\n  var isEndDelimited = tokens.length === 0;\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern;\n\n      if (keys) keys.push(token);\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?';\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?';\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')';\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?';\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?';\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')';\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {hasOwnProperty} = Object.prototype;\nconst cache = new Map();\n// see https://github.com/pillarjs/path-to-regexp/issues/148\ncache.set('|false', {\n  keys: [],\n  pattern: /(?:)/\n});\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routepath, path, exact, parentKeys, parentParams) {\n  exact = !!exact;\n  const cacheKey = `${routepath}|${exact}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp_1(routepath, keys, {\n        end: exact,\n        strict: routepath === ''\n      }),\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(path);\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.assign({}, parentParams);\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: m[0],\n    keys: (parentKeys || []).concat(regexp.keys),\n    params,\n  };\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/**\n * Traverses the routes tree and matches its nodes to the given pathname from\n * the root down to the leaves. Each match consumes a part of the pathname and\n * the matching process continues for as long as there is a matching child\n * route for the remaining part of the pathname.\n *\n * The returned value is a lazily evaluated iterator.\n *\n * The leading \"/\" in a route path matters only for the root of the routes\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\n * a child route path has no significance.\n *\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\n * also has a trailing \"/\".\n *\n * The trailing \"/\" in a route path does not affect matching of child routes\n * in any way.\n *\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\n * the case of leaf nodes described above).\n *\n * The \"\" and \"/\" routes have special treatment:\n *  1. as a single route\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\n *  2. as a parent in the routes tree\n *     the \"\" route matches any pathname without consuming any part of it\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\n *  3. as a leaf in the routes tree\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\n *  4. several directly nested \"\" or \"/\" routes\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\n *     - if there are only \"\" in the parent routes chain, no part of the\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\n *       remains significant\n *\n * Side effect:\n *   - the routes tree { path: '' } matches only the '' pathname\n *   - the routes tree { path: '', children: [ { path: '' } ] } matches any\n *     pathname (for the tree root)\n *\n * Prefix matching can be enabled also by `children: true`.\n */\nfunction matchRoute(route, pathname, ignoreLeadingSlash, parentKeys, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n  let routepath = route.path || '';\n  if (routepath.charAt(0) === '/') {\n    if (ignoreLeadingSlash) {\n      routepath = routepath.substr(1);\n    }\n    ignoreLeadingSlash = true;\n  }\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {done: true};\n      }\n\n      const children = route.__children = route.__children || route.children;\n\n      if (!match) {\n        match = matchPath(routepath, pathname, !children, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              keys: match.keys,\n              params: match.params,\n              path: match.path\n            },\n          };\n        }\n      }\n\n      if (match && children) {\n        while (childIndex < children.length) {\n          if (!childMatches) {\n            const childRoute = children[childIndex];\n            childRoute.parent = route;\n\n            let matchedLength = match.path.length;\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\n              matchedLength += 1;\n            }\n\n            childMatches = matchRoute(\n              childRoute,\n              pathname.substr(matchedLength),\n              ignoreLeadingSlash,\n              match.keys,\n              match.params\n            );\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value,\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {done: true};\n    },\n  };\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction resolveRoute(context) {\n  if (isFunction(context.route.action)) {\n    return context.route.action(context);\n  }\n  return undefined;\n}\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute;\n  while (route) {\n    route = route.parent;\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction generateErrorMessage(currentContext) {\n  let errorMessage = `Path '${currentContext.pathname}' is not properly resolved due to an error.`;\n  const routePath = (currentContext.route || {}).path;\n  if (routePath) {\n    errorMessage += ` Resolution had failed on route: '${routePath}'`;\n  }\n  return errorMessage;\n}\n\nfunction updateChainForRoute(context, match) {\n  const {route, path} = match;\n\n  if (route && !route.__synthetic) {\n    const item = {path, route};\n    if (!context.chain) {\n      context.chain = [];\n    } else {\n      // Discard old items\n      if (route.parent) {\n        let i = context.chain.length;\n        while (i-- && context.chain[i].route && context.chain[i].route !== route.parent) {\n          context.chain.pop();\n        }\n      }\n    }\n    context.chain.push(item);\n  }\n}\n\n/**\n */\nclass Resolver {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({resolver: this}, options.context);\n    this.root = Array.isArray(routes) ? {path: '', __children: routes, parent: null, __synthetic: true} : routes;\n    this.root.parent = null;\n  }\n\n  /**\n   * Returns the current list of routes (as a shallow copy). Adding / removing\n   * routes to / from the returned array does not affect the routing config,\n   * but modifying the route objects does.\n   *\n   * @return {!Array<!Router.Route>}\n   */\n  getRoutes() {\n    return [...this.root.__children];\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one).\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   */\n  setRoutes(routes) {\n    ensureRoutes(routes);\n    const newRoutes = [...toArray(routes)];\n    this.root.__children = newRoutes;\n  }\n\n  /**\n   * Appends one or several routes to the routing config and returns the\n   * effective routing config after the operation.\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   * @return {!Array<!Router.Route>}\n   * @protected\n   */\n  addRoutes(routes) {\n    ensureRoutes(routes);\n    this.root.__children.push(...toArray(routes));\n    return this.getRoutes();\n  }\n\n  /**\n   * Removes all existing routes from the routing config.\n   */\n  removeRoutes() {\n    this.setRoutes([]);\n  }\n\n  /**\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\n   * the pathname and tries resolving them one after another in the order they\n   * are listed in the routes config until the first non-null result.\n   *\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\n   *\n   * If no route handlers return a non-null result, or if no route matches the\n   * given pathname the returned promise is rejected with a 'page not found'\n   * `Error`.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    resolve or a context object with a `pathname` property and other\n   *    properties to pass to the route resolver functions.\n   * @return {!Promise<any>}\n   */\n  resolve(pathnameOrContext) {\n    const context = Object.assign(\n      {},\n      this.context,\n      isString(pathnameOrContext) ? {pathname: pathnameOrContext} : pathnameOrContext\n    );\n    const match = matchRoute(\n      this.root,\n      this.__normalizePathname(context.pathname),\n      this.baseUrl\n    );\n    const resolve = this.resolveRoute;\n    let matches = null;\n    let nextMatches = null;\n    let currentContext = context;\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(notFoundResult);\n        }\n      }\n\n      if (matches.done) {\n        return Promise.reject(getNotFoundError(context));\n      }\n\n      currentContext = Object.assign(\n        currentContext\n          ? {chain: (currentContext.chain ? currentContext.chain.slice(0) : [])}\n          : {},\n        context,\n        matches.value\n      );\n      updateChainForRoute(currentContext, matches.value);\n\n      return Promise.resolve(resolve(currentContext)).then(resolution => {\n        if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\n          currentContext.result = resolution.result || resolution;\n          return currentContext;\n        }\n        return next(resume, parent, resolution);\n      });\n    }\n\n    context.next = next;\n\n    return Promise.resolve()\n      .then(() => next(true, this.root))\n      .catch((error) => {\n        const errorMessage = generateErrorMessage(currentContext);\n        if (!error) {\n          error = new Error(errorMessage);\n        } else {\n          console.warn(errorMessage);\n        }\n        error.context = error.context || currentContext;\n        // DOMException has its own code which is read-only\n        if (!(error instanceof DOMException)) {\n          error.code = error.code || 500;\n        }\n        if (this.errorHandler) {\n          currentContext.result = this.errorHandler(error);\n          return currentContext;\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * URL constructor polyfill hook. Creates and returns an URL instance.\n   */\n  static __createUrl(url, base) {\n    return new URL(url, base);\n  }\n\n  /**\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\n   * actual `base` string for using in the `new URL(path, base);` and for\n   * prepernding the paths with. The returned base ends with a trailing slash.\n   *\n   * Otherwise, returns empty string.\n   */\n  get __effectiveBaseUrl() {\n    return this.baseUrl\n      ? this.constructor.__createUrl(\n        this.baseUrl,\n        document.baseURI || document.URL\n      ).href.replace(/[^\\/]*$/, '')\n      : '';\n  }\n\n  /**\n   * If the baseUrl is set, matches the pathname with the router’s baseUrl,\n   * and returns the local pathname with the baseUrl stripped out.\n   *\n   * If the pathname does not match the baseUrl, returns undefined.\n   *\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\n   */\n  __normalizePathname(pathname) {\n    if (!this.baseUrl) {\n      // No base URL, no need to transform the pathname.\n      return pathname;\n    }\n\n    const base = this.__effectiveBaseUrl;\n    const normalizedUrl = this.constructor.__createUrl(pathname, base).href;\n    if (normalizedUrl.slice(0, base.length) === base) {\n      return normalizedUrl.slice(base.length);\n    }\n  }\n}\n\nResolver.pathToRegexp = pathToRegexp_1;\n\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {pathToRegexp: pathToRegexp$1} = Resolver;\nconst cache$1 = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  const name = route.name || route.component;\n  if (name) {\n    if (routesByName.has(name)) {\n      routesByName.get(name).push(route);\n    } else {\n      routesByName.set(name, [route]);\n    }\n  }\n\n  if (Array.isArray(routes)) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.__children || childRoute.children);\n    }\n  }\n}\n\nfunction getRouteByName(routesByName, routeName) {\n  const routes = routesByName.get(routeName);\n  if (routes && routes.length > 1) {\n    throw new Error(\n      `Duplicate route with name \"${routeName}\".`\n      + ` Try seting unique 'name' route properties.`\n    );\n  }\n  return routes && routes[0];\n}\n\nfunction getRoutePath(route) {\n  let path = route.path;\n  path = Array.isArray(path) ? path[0] : path;\n  return path !== undefined ? path : '';\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof Resolver)) {\n    throw new TypeError('An instance of Resolver is expected');\n  }\n\n  const routesByName = new Map();\n\n  return (routeName, params) => {\n    let route = getRouteByName(routesByName, routeName);\n    if (!route) {\n      routesByName.clear(); // clear cache\n      cacheRoutes(routesByName, router.root, router.root.__children);\n\n      route = getRouteByName(routesByName, routeName);\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache$1.get(route.fullPath);\n    if (!regexp) {\n      let fullPath = getRoutePath(route);\n      let rt = route.parent;\n      while (rt) {\n        const path = getRoutePath(rt);\n        if (path) {\n          fullPath = path.replace(/\\/$/, '') + '/' + fullPath.replace(/^\\//, '');\n        }\n        rt = rt.parent;\n      }\n      const tokens = pathToRegexp$1.parse(fullPath);\n      const toPath = pathToRegexp$1.tokensToFunction(tokens);\n      const keys = Object.create(null);\n      for (let i = 0; i < tokens.length; i++) {\n        if (!isString(tokens[i])) {\n          keys[tokens[i].name] = true;\n        }\n      }\n      regexp = {toPath, keys};\n      cache$1.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n      const query = options.stringifyQueryParams(queryParams);\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n\n/**\n * @typedef NavigationTrigger\n * @type {object}\n * @property {function()} activate\n * @property {function()} inactivate\n */\n\n/** @type {Array<NavigationTrigger>} */\nlet triggers = [];\n\nfunction setNavigationTriggers(newTriggers) {\n  triggers.forEach(trigger => trigger.inactivate());\n\n  newTriggers.forEach(trigger => trigger.activate());\n\n  triggers = newTriggers;\n}\n\nconst willAnimate = elem => {\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\n  return name && name !== 'none';\n};\n\nconst waitForAnimation = (elem, cb) => {\n  const listener = () => {\n    elem.removeEventListener('animationend', listener);\n    cb();\n  };\n  elem.addEventListener('animationend', listener);\n};\n\nfunction animate(elem, className) {\n  elem.classList.add(className);\n\n  return new Promise(resolve => {\n    if (willAnimate(elem)) {\n      const rect = elem.getBoundingClientRect();\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\n      elem.setAttribute('style', `position: absolute; ${size}`);\n      waitForAnimation(elem, () => {\n        elem.classList.remove(className);\n        elem.removeAttribute('style');\n        resolve();\n      });\n    } else {\n      elem.classList.remove(className);\n      resolve();\n    }\n  });\n}\n\nconst MAX_REDIRECT_COUNT = 256;\n\nfunction isResultNotEmpty(result) {\n  return result !== null && result !== undefined;\n}\n\nfunction copyContextWithoutNext(context) {\n  const copy = Object.assign({}, context);\n  delete copy.next;\n  return copy;\n}\n\nfunction createLocation({pathname = '', search = '', hash = '', chain = [], params = {}, redirectFrom, resolver}, route) {\n  const routes = chain.map(item => item.route);\n  return {\n    baseUrl: resolver && resolver.baseUrl || '',\n    pathname,\n    search,\n    hash,\n    routes,\n    route: route || routes.length && routes[routes.length - 1] || null,\n    params,\n    redirectFrom,\n    getUrl: (userParams = {}) => getPathnameForRouter(\n      Router.pathToRegexp.compile(\n        getMatchedPath(routes)\n      )(Object.assign({}, params, userParams)),\n      resolver\n    )\n  };\n}\n\nfunction createRedirect(context, pathname) {\n  const params = Object.assign({}, context.params);\n  return {\n    redirect: {\n      pathname,\n      from: context.pathname,\n      params\n    }\n  };\n}\n\nfunction renderElement(context, element) {\n  element.location = createLocation(context);\n  const index = context.chain.map(item => item.route).indexOf(context.route);\n  context.chain[index].element = element;\n  return element;\n}\n\nfunction runCallbackIfPossible(callback, args, thisArg) {\n  if (isFunction(callback)) {\n    return callback.apply(thisArg, args);\n  }\n}\n\nfunction amend(amendmentFunction, args, element) {\n  return amendmentResult => {\n    if (amendmentResult && (amendmentResult.cancel || amendmentResult.redirect)) {\n      return amendmentResult;\n    }\n\n    if (element) {\n      return runCallbackIfPossible(element[amendmentFunction], args, element);\n    }\n  };\n}\n\nfunction processNewChildren(newChildren, route) {\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\n    throw new Error(\n      log(\n        `Incorrect \"children\" value for the route ${route.path}: expected array or object, but got ${newChildren}`\n      )\n    );\n  }\n\n  route.__children = [];\n  const childRoutes = toArray(newChildren);\n  for (let i = 0; i < childRoutes.length; i++) {\n    ensureRoute(childRoutes[i]);\n    route.__children.push(childRoutes[i]);\n  }\n}\n\nfunction removeDomNodes(nodes) {\n  if (nodes && nodes.length) {\n    const parent = nodes[0].parentNode;\n    for (let i = 0; i < nodes.length; i++) {\n      parent.removeChild(nodes[i]);\n    }\n  }\n}\n\nfunction getPathnameForRouter(pathname, router) {\n  const base = router.__effectiveBaseUrl;\n  return base\n    ? router.constructor.__createUrl(pathname.replace(/^\\//, ''), base).pathname\n    : pathname;\n}\n\nfunction getMatchedPath(chain) {\n  return chain.map(item => item.path).reduce((a, b) => {\n    if (b.length) {\n      return a.replace(/\\/$/, '') + '/' + b.replace(/^\\//, '');\n    }\n    return a;\n  }, '');\n}\n\n/**\n * A simple client-side router for single-page applications. It uses\n * express-style middleware and has a first-class support for Web Components and\n * lazy-loading. Works great in Polymer and non-Polymer apps.\n *\n * Use `new Router(outlet, options)` to create a new Router instance.\n *\n * * The `outlet` parameter is a reference to the DOM node to render\n *   the content into.\n *\n * * The `options` parameter is an optional object with options. The following\n *   keys are supported:\n *   * `baseUrl` — the initial value for [\n *     the `baseUrl` property\n *   ](#/classes/Router#property-baseUrl)\n *\n * The Router instance is automatically subscribed to navigation events\n * on `window`.\n *\n * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.\n *\n * See also detailed API docs for the following methods, for the advanced usage:\n *\n * * [setOutlet](#/classes/Router#method-setOutlet) – should be used to configure the outlet.\n * * [setTriggers](#/classes/Router#method-setTriggers) – should be used to configure the navigation events.\n * * [setRoutes](#/classes/Router#method-setRoutes) – should be used to configure the routes.\n *\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\n *\n * @extends Resolver\n * @demo demo/index.html\n * @summary JavaScript class that renders different DOM content depending on\n *    a given path. It can re-render when triggered or automatically on\n *    'popstate' and / or 'click' events.\n */\nclass Router extends Resolver {\n\n  /**\n   * Creates a new Router instance with a given outlet, and\n   * automatically subscribes it to navigation events on the `window`.\n   * Using a constructor argument or a setter for outlet is equivalent:\n   *\n   * ```\n   * const router = new Router();\n   * router.setOutlet(outlet);\n   * ```\n   * @param {?Node=} outlet\n   * @param {?RouterOptions=} options\n   */\n  constructor(outlet, options) {\n    const baseElement = document.head.querySelector('base');\n    const baseHref = baseElement && baseElement.getAttribute('href');\n    super([], Object.assign({\n      // Default options\n      baseUrl: baseHref && Resolver.__createUrl(baseHref, document.URL).pathname.replace(/[^\\/]*$/, '')\n    }, options));\n\n    this.resolveRoute = context => this.__resolveRoute(context);\n\n    const triggers = Router.NavigationTrigger;\n    Router.setTriggers.apply(Router, Object.keys(triggers).map(key => triggers[key]));\n\n    /**\n     * The base URL for all routes in the router instance. By default,\n     * if the base element exists in the `<head>`, vaadin-router\n     * takes the `<base href>` attribute value, resolves against current `document.URL`\n     * and gets the `pathname` from the result.\n     *\n     * @public\n     * @type {string}\n     */\n    this.baseUrl;\n\n    /**\n     * A promise that is settled after the current render cycle completes. If\n     * there is no render cycle in progress the promise is immediately settled\n     * with the last render cycle result.\n     *\n     * @public\n     * @type {!Promise<!RouterLocation>}\n     */\n    this.ready;\n    this.ready = Promise.resolve(outlet);\n\n    /**\n     * Contains read-only information about the current router location:\n     * pathname, active routes, parameters. See the\n     * [Location type declaration](#/classes/RouterLocation)\n     * for more details.\n     *\n     * @public\n     * @type {!RouterLocation}\n     */\n    this.location;\n    this.location = createLocation({resolver: this});\n\n    this.__lastStartedRenderId = 0;\n    this.__navigationEventHandler = this.__onNavigationEvent.bind(this);\n    this.setOutlet(outlet);\n    this.subscribe();\n    // Using WeakMap instead of WeakSet because WeakSet is not supported by IE11\n    this.__createdByRouter = new WeakMap();\n    this.__addedByRouter = new WeakMap();\n  }\n\n  __resolveRoute(context) {\n    const route = context.route;\n\n    let callbacks = Promise.resolve();\n\n    if (isFunction(route.children)) {\n      callbacks = callbacks\n        .then(() => route.children(copyContextWithoutNext(context)))\n        .then(children => {\n          // The route.children() callback might have re-written the\n          // route.children property instead of returning a value\n          if (!isResultNotEmpty(children) && !isFunction(route.children)) {\n            children = route.children;\n          }\n          processNewChildren(children, route);\n        });\n    }\n\n    const commands = {\n      redirect: path => createRedirect(context, path),\n      component: (component) => {\n        const element = document.createElement(component);\n        this.__createdByRouter.set(element, true);\n        return element;\n      }\n    };\n\n    return callbacks\n      .then(() => {\n        if (this.__isLatestRender(context)) {\n          return runCallbackIfPossible(route.action, [context, commands], route);\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          // Actions like `() => import('my-view.js')` are not expected to\n          // end the resolution, despite the result is not empty. Checking\n          // the result with a whitelist of values that end the resolution.\n          if (result instanceof HTMLElement ||\n              result.redirect ||\n              result === notFoundResult) {\n            return result;\n          }\n        }\n\n        if (isString(route.redirect)) {\n          return commands.redirect(route.redirect);\n        }\n\n        if (route.bundle) {\n          return loadBundle(route.bundle)\n            .then(() => {}, () => {\n              throw new Error(log(`Bundle not found: ${route.bundle}. Check if the file name is correct`));\n            });\n        }\n      })\n      .then(result => {\n        if (isResultNotEmpty(result)) {\n          return result;\n        }\n        if (isString(route.component)) {\n          return commands.component(route.component);\n        }\n      });\n  }\n\n  /**\n   * Sets the router outlet (the DOM node where the content for the current\n   * route is inserted). Any content pre-existing in the router outlet is\n   * removed at the end of each render pass.\n   *\n   * NOTE: this method is automatically invoked first time when creating a new Router instance.\n   *\n   * @param {?Node} outlet the DOM node where the content for the current route\n   *     is inserted.\n   */\n  setOutlet(outlet) {\n    if (outlet) {\n      this.__ensureOutlet(outlet);\n    }\n    this.__outlet = outlet;\n  }\n\n  /**\n   * Returns the current router outlet. The initial value is `undefined`.\n   *\n   * @return {?Node} the current router outlet (or `undefined`)\n   */\n  getOutlet() {\n    return this.__outlet;\n  }\n\n  /**\n   * Sets the routing config (replacing the existing one) and triggers a\n   * navigation event so that the router outlet is refreshed according to the\n   * current `window.location` and the new routing config.\n   *\n   * Each route object may have the following properties, listed here in the processing order:\n   * * `path` – the route path (relative to the parent route if any) in the\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   *\n   * * `children` – an array of nested routes or a function that provides this\n   * array at the render time. The function can be synchronous or asynchronous:\n   * in the latter case the render is delayed until the returned promise is\n   * resolved. The `children` function is executed every time when this route is\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\n   * but it might have a performance impact as well. In order to avoid calling\n   * the function on subsequent renders, you can override the `children` property\n   * of the route object and save the calculated array there\n   * (via `context.route.children = [ route1, route2, ...];`).\n   * Parent routes are fully resolved before resolving the children. Children\n   * 'path' values are relative to the parent ones.\n   *\n   * * `action` – the action that is executed before the route is resolved.\n   * The value for this property should be a function, accepting `context`\n   * and `commands` parameters described below. If present, this function is\n   * always invoked first, disregarding of the other properties' presence.\n   * The action can return a result directly or within a `Promise`, which\n   * resolves to the result. If the action result is an `HTMLElement` instance,\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\n   * or a `context.next()` result, the current route resolution is finished,\n   * and other route config properties are ignored.\n   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.\n   * The target route should also be defined.\n   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,\n   * or the object with \"module\" and \"nomodule\" keys referring to different bundles.\n   * Each bundle is only loaded once. If \"module\" and \"nomodule\" are set, only one bundle is loaded,\n   * depending on whether the browser supports ES modules or not.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.\n   * See also **Code Splitting** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `component` – the tag name of the Web Component to resolve the route to.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * If route contains the `component` property (or an action that return a component)\n   * and its child route also contains the `component` property, child route's component\n   * will be rendered as a light dom child of a parent component.\n   *\n   * * `name` – the string name of the route to use in the\n   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)\n   * navigation helper method.\n   *\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback\n   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function\n   * because arrow functions do not have their own `this` reference.\n   *\n   * `context` object that is passed to `action` function holds the following properties:\n   * * `context.pathname` – string with the pathname being resolved\n   *\n   * * `context.search` – search query string\n   *\n   * * `context.hash` – hash string\n   *\n   * * `context.params` – object with route parameters\n   *\n   * * `context.route` – object that holds the route that is currently being rendered.\n   *\n   * * `context.next()` – function for asynchronously getting the next route\n   * contents from the resolution chain (if any)\n   *\n   * `commands` object that is passed to `action` function has\n   * the following methods:\n   *\n   * * `commands.redirect(path)` – function that creates a redirect data\n   * for the path specified.\n   *\n   * * `commands.component(component)` – function that creates a new HTMLElement\n   * with current context. Note: the component created by this function is reused if visiting the same path twice in row.\n   *\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   * @param {?boolean} skipRender configure the router but skip rendering the\n   *     route corresponding to the current `window.location` values\n   *\n   * @return {!Promise<!Node>}\n   */\n  setRoutes(routes, skipRender = false) {\n    this.__previousContext = undefined;\n    this.__urlForName = undefined;\n    super.setRoutes(routes);\n    if (!skipRender) {\n      this.__onNavigationEvent();\n    }\n    return this.ready;\n  }\n\n  /**\n   * Asynchronously resolves the given pathname and renders the resolved route\n   * component into the router outlet. If no router outlet is set at the time of\n   * calling this method, or at the time when the route resolution is completed,\n   * a `TypeError` is thrown.\n   *\n   * Returns a promise that is fulfilled with the router outlet DOM Node after\n   * the route component is created and inserted into the router outlet, or\n   * rejected if no route matches the given path.\n   *\n   * If another render pass is started before the previous one is completed, the\n   * result of the previous render pass is ignored.\n   *\n   * @param {!string|!{pathname: !string, search: ?string, hash: ?string}} pathnameOrContext\n   *    the pathname to render or a context object with a `pathname` property,\n   *    optional `search` and `hash` properties, and other properties\n   *    to pass to the resolver.\n   * @param {boolean=} shouldUpdateHistory\n   *    update browser history with the rendered location\n   * @return {!Promise<!Node>}\n   */\n  render(pathnameOrContext, shouldUpdateHistory) {\n    const renderId = ++this.__lastStartedRenderId;\n    const context = Object.assign(\n      {\n        search: '',\n        hash: ''\n      },\n      isString(pathnameOrContext)\n        ? {pathname: pathnameOrContext}\n        : pathnameOrContext,\n      {\n        __renderId: renderId\n      }\n    );\n\n    // Find the first route that resolves to a non-empty result\n    this.ready = this.resolve(context)\n\n      // Process the result of this.resolve() and handle all special commands:\n      // (redirect / prevent / component). If the result is a 'component',\n      // then go deeper and build the entire chain of nested components matching\n      // the pathname. Also call all 'on before' callbacks along the way.\n      .then(context => this.__fullyResolveChain(context))\n\n      .then(context => {\n        if (this.__isLatestRender(context)) {\n          const previousContext = this.__previousContext;\n\n          // Check if the render was prevented and make an early return in that case\n          if (context === previousContext) {\n            // Replace the history with the previous context\n            // to make sure the URL stays the same.\n            this.__updateBrowserHistory(previousContext, true);\n            return this.location;\n          }\n\n          this.location = createLocation(context);\n\n          if (shouldUpdateHistory) {\n            // Replace only if first render redirects, so that we don’t leave\n            // the redirecting record in the history\n            this.__updateBrowserHistory(context, renderId === 1);\n          }\n\n          fireRouterEvent('location-changed', {router: this, location: this.location});\n\n          // Skip detaching/re-attaching there are no render changes\n          if (context.__skipAttach) {\n            this.__copyUnchangedElements(context, previousContext);\n            this.__previousContext = context;\n            return this.location;\n          }\n\n          this.__addAppearingContent(context, previousContext);\n          const animationDone = this.__animateIfNeeded(context);\n\n          this.__runOnAfterEnterCallbacks(context);\n          this.__runOnAfterLeaveCallbacks(context, previousContext);\n\n          return animationDone.then(() => {\n            if (this.__isLatestRender(context)) {\n              // If there is another render pass started after this one,\n              // the 'disappearing content' would be removed when the other\n              // render pass calls `this.__addAppearingContent()`\n              this.__removeDisappearingContent();\n\n              this.__previousContext = context;\n              return this.location;\n            }\n          });\n        }\n      })\n      .catch(error => {\n        if (renderId === this.__lastStartedRenderId) {\n          if (shouldUpdateHistory) {\n            this.__updateBrowserHistory(context);\n          }\n          removeDomNodes(this.__outlet && this.__outlet.children);\n          this.location = createLocation(Object.assign(context, {resolver: this}));\n          fireRouterEvent('error', Object.assign({router: this, error}, context));\n          throw error;\n        }\n      });\n    return this.ready;\n  }\n\n  // `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().\n  // It would contain a 'redirect' route or the first 'component' route that\n  // matched the pathname. There might be more child 'component' routes to be\n  // resolved and added into the chain. This method would find and add them.\n  // `contextBeforeRedirects` is the context containing such a child component\n  // route. It's only necessary when this method is called recursively (otherwise\n  // it's the same as the 'top of the chain' context).\n  //\n  // Apart from building the chain of child components, this method would also\n  // handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'\n  // and 'redirect' callback results.\n  __fullyResolveChain(topOfTheChainContextBeforeRedirects,\n    contextBeforeRedirects = topOfTheChainContextBeforeRedirects) {\n    return this.__findComponentContextAfterAllRedirects(contextBeforeRedirects)\n      // `contextAfterRedirects` is always a context with an `HTMLElement` result\n      // In other cases the promise gets rejected and .then() is not called\n      .then(contextAfterRedirects => {\n        const redirectsHappened = contextAfterRedirects !== contextBeforeRedirects;\n        const topOfTheChainContextAfterRedirects =\n          redirectsHappened ? contextAfterRedirects : topOfTheChainContextBeforeRedirects;\n\n        const matchedPath = getPathnameForRouter(\n          getMatchedPath(contextAfterRedirects.chain),\n          contextAfterRedirects.resolver\n        );\n        const isFound = (matchedPath === contextAfterRedirects.pathname);\n\n        // Recursive method to try matching more child and sibling routes\n        const findNextContextIfAny = (context, parent = context.route, prevResult) => {\n          return context.next(undefined, parent, prevResult).then(nextContext => {\n            if (nextContext === null || nextContext === notFoundResult) {\n              // Next context is not found in children, ...\n              if (isFound) {\n                // ...but original context is already fully matching - use it\n                return context;\n              } else if (parent.parent !== null) {\n                // ...and there is no full match yet - step up to check siblings\n                return findNextContextIfAny(context, parent.parent, nextContext);\n              } else {\n                return nextContext;\n              }\n            }\n\n            return nextContext;\n          });\n        };\n\n        return findNextContextIfAny(contextAfterRedirects).then(nextContext => {\n          if (nextContext === null || nextContext === notFoundResult) {\n            throw getNotFoundError(topOfTheChainContextAfterRedirects);\n          }\n\n          return nextContext\n          && nextContext !== notFoundResult\n          && nextContext !== contextAfterRedirects\n            ? this.__fullyResolveChain(topOfTheChainContextAfterRedirects, nextContext)\n            : this.__amendWithOnBeforeCallbacks(contextAfterRedirects);\n        });\n      });\n  }\n\n  __findComponentContextAfterAllRedirects(context) {\n    const result = context.result;\n    if (result instanceof HTMLElement) {\n      renderElement(context, result);\n      return Promise.resolve(context);\n    } else if (result.redirect) {\n      return this.__redirect(result.redirect, context.__redirectCount, context.__renderId)\n        .then(context => this.__findComponentContextAfterAllRedirects(context));\n    } else if (result instanceof Error) {\n      return Promise.reject(result);\n    } else {\n      return Promise.reject(\n        new Error(\n          log(\n            `Invalid route resolution result for path \"${context.pathname}\". ` +\n            `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` +\n            `Double check the action return value for the route.`\n          )\n        ));\n    }\n  }\n\n  __amendWithOnBeforeCallbacks(contextWithFullChain) {\n    return this.__runOnBeforeCallbacks(contextWithFullChain).then(amendedContext => {\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\n        return amendedContext;\n      }\n      return this.__fullyResolveChain(amendedContext);\n    });\n  }\n\n  __runOnBeforeCallbacks(newContext) {\n    const previousContext = this.__previousContext || {};\n    const previousChain = previousContext.chain || [];\n    const newChain = newContext.chain;\n\n    let callbacks = Promise.resolve();\n    const prevent = () => ({cancel: true});\n    const redirect = (pathname) => createRedirect(newContext, pathname);\n\n    newContext.__divergedChainIndex = 0;\n    newContext.__skipAttach = false;\n    if (previousChain.length) {\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); i = ++newContext.__divergedChainIndex) {\n        if (previousChain[i].route !== newChain[i].route\n          || previousChain[i].path !== newChain[i].path && previousChain[i].element !== newChain[i].element\n          || !this.__isReusableElement(previousChain[i].element, newChain[i].element)) {\n          break;\n        }\n      }\n\n      // Skip re-attaching and notifications if element and chain do not change\n      newContext.__skipAttach =\n        // Same route chain\n        newChain.length === previousChain.length && newContext.__divergedChainIndex == newChain.length &&\n        // Same element\n        this.__isReusableElement(newContext.result, previousContext.result);\n\n      if (newContext.__skipAttach) {\n        // execute onBeforeLeave for changed segment element when skipping attach\n        for (let i = newChain.length - 1; i >= 0; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n        // execute onBeforeEnter for changed segment element when skipping attach\n        for (let i = 0; i < newChain.length; i++) {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n        }\n\n      } else {\n        // execute onBeforeLeave when NOT skipping attach\n        for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {prevent}, previousChain[i]);\n        }\n      }\n    }\n    // execute onBeforeEnter when NOT skipping attach\n    if (!newContext.__skipAttach) {\n      for (let i = 0; i < newChain.length; i++) {\n        if (i < newContext.__divergedChainIndex) {\n          if (i < previousChain.length && previousChain[i].element) {\n            previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n          }\n        } else {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {prevent, redirect}, newChain[i]);\n          if (newChain[i].element) {\n            newChain[i].element.location = createLocation(newContext, newChain[i].route);\n          }\n        }\n      }\n    }\n    return callbacks.then(amendmentResult => {\n      if (amendmentResult) {\n        if (amendmentResult.cancel) {\n          this.__previousContext.__renderId = newContext.__renderId;\n          return this.__previousContext;\n        }\n        if (amendmentResult.redirect) {\n          return this.__redirect(amendmentResult.redirect, newContext.__redirectCount, newContext.__renderId);\n        }\n      }\n      return newContext;\n    });\n  }\n\n  __runOnBeforeLeaveCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const afterLeaveFunction = amend('onBeforeLeave', [location, commands, this], chainElement.element);\n        return afterLeaveFunction(result);\n      }\n    }).then(result => {\n      if (!(result || {}).redirect) {\n        return result;\n      }\n    });\n  }\n\n  __runOnBeforeEnterCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext, chainElement.route);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const beforeEnterFunction = amend('onBeforeEnter', [location, commands, this], chainElement.element);\n        return beforeEnterFunction(result);\n      }\n    });\n  }\n\n  __isReusableElement(element, otherElement) {\n    if (element && otherElement) {\n      return this.__createdByRouter.get(element) && this.__createdByRouter.get(otherElement)\n        ? element.localName === otherElement.localName\n        : element === otherElement;\n    }\n    return false;\n  }\n\n  __isLatestRender(context) {\n    return context.__renderId === this.__lastStartedRenderId;\n  }\n\n  __redirect(redirectData, counter, renderId) {\n    if (counter > MAX_REDIRECT_COUNT) {\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\n    }\n\n    return this.resolve({\n      pathname: this.urlForPath(\n        redirectData.pathname,\n        redirectData.params\n      ),\n      redirectFrom: redirectData.from,\n      __redirectCount: (counter || 0) + 1,\n      __renderId: renderId\n    });\n  }\n\n  __ensureOutlet(outlet = this.__outlet) {\n    if (!(outlet instanceof Node)) {\n      throw new TypeError(log(`Expected router outlet to be a valid DOM Node (but got ${outlet})`));\n    }\n  }\n\n  __updateBrowserHistory({pathname, search = '', hash = ''}, replace) {\n    if (window.location.pathname !== pathname\n        || window.location.search !== search\n        || window.location.hash !== hash\n    ) {\n      const changeState = replace ? 'replaceState' : 'pushState';\n      window.history[changeState](null, document.title, pathname + search + hash);\n      window.dispatchEvent(new PopStateEvent('popstate', {state: 'vaadin-router-ignore'}));\n    }\n  }\n\n  __copyUnchangedElements(context, previousContext) {\n    // Find the deepest common parent between the last and the new component\n    // chains. Update references for the unchanged elements in the new chain\n    let deepestCommonParent = this.__outlet;\n    for (let i = 0; i < context.__divergedChainIndex; i++) {\n      const unchangedElement = previousContext && previousContext.chain[i].element;\n      if (unchangedElement) {\n        if (unchangedElement.parentNode === deepestCommonParent) {\n          context.chain[i].element = unchangedElement;\n          deepestCommonParent = unchangedElement;\n        } else {\n          break;\n        }\n      }\n    }\n    return deepestCommonParent;\n  }\n\n  __addAppearingContent(context, previousContext) {\n    this.__ensureOutlet();\n\n    // If the previous 'entering' animation has not completed yet,\n    // stop it and remove that content from the DOM before adding new one.\n    this.__removeAppearingContent();\n\n    // Copy reusable elements from the previousContext to current\n    const deepestCommonParent = this.__copyUnchangedElements(context, previousContext);\n\n    // Keep two lists of DOM elements:\n    //  - those that should be removed once the transition animation is over\n    //  - and those that should remain\n    this.__appearingContent = [];\n    this.__disappearingContent = Array\n      .from(deepestCommonParent.children)\n      .filter(\n        // Only remove layout content that was added by router\n        e => this.__addedByRouter.get(e) &&\n        // Do not remove the result element to avoid flickering\n        e !== context.result);\n\n    // Add new elements (starting after the deepest common parent) to the DOM.\n    // That way only the components that are actually different between the two\n    // locations are added to the DOM (and those that are common remain in the\n    // DOM without first removing and then adding them again).\n    let parentElement = deepestCommonParent;\n    for (let i = context.__divergedChainIndex; i < context.chain.length; i++) {\n      const elementToAdd = context.chain[i].element;\n      if (elementToAdd) {\n        parentElement.appendChild(elementToAdd);\n        this.__addedByRouter.set(elementToAdd, true);\n        if (parentElement === deepestCommonParent) {\n          this.__appearingContent.push(elementToAdd);\n        }\n        parentElement = elementToAdd;\n      }\n    }\n  }\n\n  __removeDisappearingContent() {\n    if (this.__disappearingContent) {\n      removeDomNodes(this.__disappearingContent);\n    }\n    this.__disappearingContent = null;\n    this.__appearingContent = null;\n  }\n\n  __removeAppearingContent() {\n    if (this.__disappearingContent && this.__appearingContent) {\n      removeDomNodes(this.__appearingContent);\n      this.__disappearingContent = null;\n      this.__appearingContent = null;\n    }\n  }\n\n  __runOnAfterLeaveCallbacks(currentContext, targetContext) {\n    if (!targetContext) {\n      return;\n    }\n\n    // REVERSE iteration: from Z to A\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = targetContext.chain[i].element;\n      if (!currentComponent) {\n        continue;\n      }\n      try {\n        const location = createLocation(currentContext);\n        runCallbackIfPossible(\n          currentComponent.onAfterLeave,\n          [location, {}, targetContext.resolver],\n          currentComponent);\n      } finally {\n        if (this.__disappearingContent.indexOf(currentComponent) > -1) {\n          removeDomNodes(currentComponent.children);\n        }\n      }\n    }\n  }\n\n  __runOnAfterEnterCallbacks(currentContext) {\n    // forward iteration: from A to Z\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n      const currentComponent = currentContext.chain[i].element || {};\n      const location = createLocation(currentContext, currentContext.chain[i].route);\n      runCallbackIfPossible(\n        currentComponent.onAfterEnter,\n        [location, {}, currentContext.resolver],\n        currentComponent);\n    }\n  }\n\n  __animateIfNeeded(context) {\n    const from = (this.__disappearingContent || [])[0];\n    const to = (this.__appearingContent || [])[0];\n    const promises = [];\n\n    const chain = context.chain;\n    let config;\n    for (let i = chain.length; i > 0; i--) {\n      if (chain[i - 1].route.animate) {\n        config = chain[i - 1].route.animate;\n        break;\n      }\n    }\n\n    if (from && to && config) {\n      const leave = isObject(config) && config.leave || 'leaving';\n      const enter = isObject(config) && config.enter || 'entering';\n      promises.push(animate(from, leave));\n      promises.push(animate(to, enter));\n    }\n\n    return Promise.all(promises).then(() => context);\n  }\n\n  /**\n   * Subscribes this instance to navigation events on the `window`.\n   *\n   * NOTE: beware of resource leaks. For as long as a router instance is\n   * subscribed to navigation events, it won't be garbage collected.\n   */\n  subscribe() {\n    window.addEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  /**\n   * Removes the subscription to navigation events created in the `subscribe()`\n   * method.\n   */\n  unsubscribe() {\n    window.removeEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  __onNavigationEvent(event) {\n    const {pathname, search, hash} = event ? event.detail : window.location;\n    if (isString(this.__normalizePathname(pathname))) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.render({pathname, search, hash}, true);\n    }\n  }\n\n  /**\n   * Configures what triggers Router navigation events:\n   *  - `POPSTATE`: popstate events on the current `window`\n   *  - `CLICK`: click events on `<a>` links leading to the current page\n   *\n   * This method is invoked with the pre-configured values when creating a new Router instance.\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\n   *\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\n   * e.g. if you want to handle `click` differently.\n   *\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * @param {...NavigationTrigger} triggers\n   */\n  static setTriggers(...triggers) {\n    setNavigationTriggers(triggers);\n  }\n\n  /**\n   * Generates a URL for the route with the given name, optionally performing\n   * substitution of parameters.\n   *\n   * The route is searched in all the Router instances subscribed to\n   * navigation events.\n   *\n   * **Note:** For child route names, only array children are considered.\n   * It is not possible to generate URLs using a name for routes set with\n   * a children function.\n   *\n   * @function urlForName\n   * @param {!string} name the route name or the route’s `component` name.\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForName(name, params) {\n    if (!this.__urlForName) {\n      this.__urlForName = generateUrls(this);\n    }\n    return getPathnameForRouter(\n      this.__urlForName(name, params),\n      this\n    );\n  }\n\n  /**\n   * Generates a URL for the given route path, optionally performing\n   * substitution of parameters.\n   *\n   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n  urlForPath(path, params) {\n    return getPathnameForRouter(\n      Router.pathToRegexp.compile(path)(params),\n      this\n    );\n  }\n\n  /**\n   * Triggers navigation to a new path. Returns a boolean without waiting until\n   * the navigation is complete. Returns `true` if at least one `Router`\n   * has handled the navigation (was subscribed and had `baseUrl` matching\n   * the `path` argument), otherwise returns `false`.\n   *\n   * @param {!string|!{pathname: !string, search: (string|undefined), hash: (string|undefined)}} path\n   *   a new in-app path string, or an URL-like object with `pathname`\n   *   string property, and optional `search` and `hash` string properties.\n   * @return {boolean}\n   */\n  static go(path) {\n    const {pathname, search, hash} = isString(path)\n      ? this.__createUrl(path, 'http://a') // some base to omit origin\n      : path;\n    return fireRouterEvent('go', {pathname, search, hash});\n  }\n}\n\nconst DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e);\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nconst runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n\n/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nconst usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\n\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/router',\n  version: '1.7.4',\n});\n\nusageStatistics();\n\nRouter.NavigationTrigger = {POPSTATE, CLICK};\n\n\n//# sourceMappingURL=vaadin-router.js.map\n\n\n//# sourceURL=webpack://scripting-industry/./node_modules/@vaadin/router/dist/vaadin-router.js?");

/***/ }),

/***/ "./node_modules/normalize.css/normalize.css":
/*!**************************************************!*\
  !*** ./node_modules/normalize.css/normalize.css ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://scripting-industry/./node_modules/normalize.css/normalize.css?");

/***/ }),

/***/ "./src/components/components.css":
/*!***************************************!*\
  !*** ./src/components/components.css ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://scripting-industry/./src/components/components.css?");

/***/ }),

/***/ "./src/design/common.css":
/*!*******************************!*\
  !*** ./src/design/common.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://scripting-industry/./src/design/common.css?");

/***/ }),

/***/ "./src/layouts/layouts.css":
/*!*********************************!*\
  !*** ./src/layouts/layouts.css ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://scripting-industry/./src/layouts/layouts.css?");

/***/ }),

/***/ "./src/views/views.css":
/*!*****************************!*\
  !*** ./src/views/views.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://scripting-industry/./src/views/views.css?");

/***/ }),

/***/ "./src/components/modal/index.js":
/*!***************************************!*\
  !*** ./src/components/modal/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Modal\": () => (/* binding */ Modal),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/**\n * @see https://www.w3schools.com/howto/howto_css_modals.asp\n */\nconst _MODAL = {\n  openModal: ({ element }) => {\n    element.style.display = \"block\";\n  },\n  closeModal: ({ element }) => {\n    element.style.display = \"none\";\n  },\n};\n\nclass Modal {\n  constructor({ element }) {\n    this._element = element;\n\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this._onWindowClick = this._onWindowClick.bind(this);\n    \n    window.addEventListener('click', this._onWindowClick);\n    this._element.querySelector('.modal .close').addEventListener('click', this.close);\n  }\n\n  dispose() {\n    window.removeEventListener('click', this._onWindowClick);\n    this._element.querySelector('.modal .close').removeEventListener('click', this.close);\n    delete this._element;\n  }\n\n  open() {\n    _MODAL.openModal({ element: this._element });\n  }\n\n  close() {\n    _MODAL.closeModal({ element: this._element });\n  }\n\n  _onWindowClick(_event) {\n    // When the user clicks anywhere outside of the modal, close it\n    if (_event.target === this._element) {\n      this.close();\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_MODAL);\n\n//# sourceURL=webpack://scripting-industry/./src/components/modal/index.js?");

/***/ }),

/***/ "./src/components/pickerForConcept/index.js":
/*!**************************************************!*\
  !*** ./src/components/pickerForConcept/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n\n\n\n\n\nconst _ENV = {\n  myDIV: null,\n  view: null,\n  viewLayer: null,\n  topicName: null,\n  topicData: null,\n};\n\nconst _PICKCONCEPT = {\n  _env: _ENV,\n\n  init: () => {\n    if (_ENV.myDIV !== null) { return; }\n\n    _ENV.myDIV = document.createElement('div');\n    _ENV.myDIV.classList.add(\"pickerForConcept\");\n  },\n\n  getComponent() {\n    return _ENV.myDIV;\n  },\n\n  _render: () => {\n    const { concepts } = _ENV.topicData;\n    let _innerHTML = '';\n\n    if (Object.keys(concepts).length > 1) {  // Only render buttons for more than one concept\n      _innerHTML = lit_html__WEBPACK_IMPORTED_MODULE_0__.html`\n      <fieldset>\n        <legend>Concepts</legend>\n        ${_PICKCONCEPT._renderButtons()}\n      </fieldset>\n    `;\n    }\n\n    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(_innerHTML, _ENV.myDIV);\n  },\n\n  _renderButtons() {\n    const { concepts } = _ENV.topicData;\n    const _result = [];\n\n    Object.keys(concepts).forEach(_k => {\n      _result.push( lit_html__WEBPACK_IMPORTED_MODULE_0__.html `<button data-concept=\"${_k}\" @click=${_PICKCONCEPT._handleButtonClick}>${concepts[_k].title}</button>` );\n    });\n    \n    return _result;\n  },\n\n  update: ({ view }) => {\n    _ENV.view = view;\n    _ENV.viewLayer = view._env.myDIV;\n    _ENV.topicName = view._env.topicName;\n    _ENV.topicData = view._env.topicData;\n\n    if (_ENV.topicData === null) { return; }\n    \n    _PICKCONCEPT._render();\n  },\n\n  _handleButtonClick: (_event) => {\n    const _concept = _event.srcElement.attributes[\"data-concept\"].value;\n\n    _ENV.viewLayer.querySelector(`section[data-concept=\"${_concept}\"]`)\n    .scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n  },\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_PICKCONCEPT);\n\n//# sourceURL=webpack://scripting-industry/./src/components/pickerForConcept/index.js?");

/***/ }),

/***/ "./src/components/pickerForContext/index.js":
/*!**************************************************!*\
  !*** ./src/components/pickerForContext/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var _state_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../state/config.js */ \"./src/state/config.js\");\n/* harmony import */ var _state_context_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../state/context.js */ \"./src/state/context.js\");\n\n\n\n\n\n\n\nconst _ENV = {\n  myDIV: null,\n  contexts: [],\n  config: null,\n};\n\nconst _PICKCONTEXT = {\n  _env: _ENV,\n\n  init: () => {\n    if (_ENV.myDIV !== null) { return; }\n\n    _ENV.config = _state_config_js__WEBPACK_IMPORTED_MODULE_1__.default.getConfig()['context-picker'];\n\n    _ENV.myDIV = document.createElement('div');\n    _ENV.myDIV.classList.add(\"pickerForContext\");\n\n    _state_context_js__WEBPACK_IMPORTED_MODULE_2__.default.listenContextChanges({ listener: _PICKCONTEXT._listenerContextChange });\n\n    _PICKCONTEXT.update({ contexts: [_ENV.config.default] });\n    _PICKCONTEXT._listenerContextChange({ context: _ENV.config.default }); // default context\n  },\n\n  getComponent() {\n    return _ENV.myDIV;\n  },\n\n  _render: () => {\n    const _innerHTML = lit_html__WEBPACK_IMPORTED_MODULE_0__.html`\n      ${_PICKCONTEXT._renderButtons()}\n    `;\n    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(_innerHTML, _ENV.myDIV);\n  },\n\n  _renderButtons() {\n    const { buttons } = _ENV.config;\n    const _result = [];\n\n    Object.keys(buttons).forEach(_k => {\n      _result.push( lit_html__WEBPACK_IMPORTED_MODULE_0__.html `<button data-context=\"${_k}\" @click=${_PICKCONTEXT._handleButtonClick}>${buttons[_k].text}</button>` );\n    });\n    \n    return _result;\n  },\n\n  update: ({ contexts }) => {\n    _ENV.contexts = contexts;\n\n    _PICKCONTEXT._render();\n\n   if (_ENV.contexts.length < 2) {  // hide all if there are less than 2 contexts\n    _ENV.myDIV.style.display = 'none';\n    return;\n   } else {\n    _ENV.myDIV.style.display = 'block';\n   }\n\n   _ENV.myDIV.querySelectorAll('button')  // hide not enabled contexts\n    .forEach(_button => {\n      if ( _ENV.contexts.includes(_button.getAttribute('data-context')) === false ) {\n        _button.style.display = 'none';\n      } else {\n        _button.style.display = 'inline-block';\n      }\n    });\n  },\n\n  _handleButtonClick: (_event) => {\n    const _context = _event.srcElement.attributes[\"data-context\"].value;\n    _state_context_js__WEBPACK_IMPORTED_MODULE_2__.default.changeContext({ name: _context });\n  },\n\n  _listenerContextChange: (_data) => {\n    const { myDIV } = _ENV;\n    myDIV.querySelectorAll('button')\n      .forEach((_button) => { _button.classList.remove('is-active'); });\n    myDIV.querySelector(`button[data-context=\"${_data.context}\"]`)\n      .classList.add('is-active');\n  },\n\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_PICKCONTEXT);\n\n//# sourceURL=webpack://scripting-industry/./src/components/pickerForContext/index.js?");

/***/ }),

/***/ "./src/components/sectionForConcept/index.js":
/*!***************************************************!*\
  !*** ./src/components/sectionForConcept/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SectionForConcept\": () => (/* binding */ SectionForConcept)\n/* harmony export */ });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n\n\n\n\n\nclass SectionForConcept {\n  constructor({ name, data }) {\n    this._env = {\n      myDIV: null,\n      data: {\n        name,\n        title: null,\n        docLink: null,\n        description: null,\n      },\n    };\n\n    if (data) {\n      this.data = {\n        ...this.data,\n        ...data\n      };\n    }\n\n    this.update = this.update.bind(this);\n    this._init();\n  }\n\n  _init() {\n    const { _env } = this;\n    _env.myDIV = document.createElement('section');\n    _env.myDIV.classList.add(\"concept\");\n    _env.myDIV.setAttribute(\"data-concept\", _env.data.name);\n  }\n\n  get component() {\n    const { _env } = this;\n    return _env.myDIV;\n  }\n\n  set data({ title, docLink, description, codes }) {\n    const { _env } = this;\n    _env.data = {\n      ..._env.data,\n      title, docLink, description, codes\n    };\n  }\n\n  get data() { return this._env.data; }\n\n  _render() {\n    const { myDIV, data } = this._env;\n    const { Prism } = window;\n\n    const _innerHTML = lit_html__WEBPACK_IMPORTED_MODULE_0__.html`\n      <h2 class=\"title\">${data.title}</h2>\n      <a class=\"docLink\" href=\"${data.docLink}\" target=\"_blank\">doc</a> <br>\n      <div class=\"description\">${(0,lit_html__WEBPACK_IMPORTED_MODULE_0__.html)([data.description])}</div>\n      ${this._renderCodes()}  \n    `;\n    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(_innerHTML, myDIV);\n\n    for (const _codeElements of myDIV.querySelectorAll('pre code')) {\n      Prism.highlightElement(_codeElements);\n    }\n  }\n\n  _renderCodes() {\n    const { codes } = this._env.data;\n    const _result = [];\n\n    codes.forEach(_codeItem => {\n      _result.push( lit_html__WEBPACK_IMPORTED_MODULE_0__.html `<pre><code class=\"language-${_codeItem.language}\">${(0,lit_html__WEBPACK_IMPORTED_MODULE_0__.html)([_codeItem.code])}</code></pre>` );\n    });\n    \n    return _result;\n  }\n\n  update() {\n    this._render();\n  }\n}\n\n//# sourceURL=webpack://scripting-industry/./src/components/sectionForConcept/index.js?");

/***/ }),

/***/ "./src/design/index.js":
/*!*****************************!*\
  !*** ./src/design/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var normalize_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! normalize.css */ \"./node_modules/normalize.css/normalize.css\");\n/* harmony import */ var _common_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.css */ \"./src/design/common.css\");\n/* harmony import */ var _layouts_layouts_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../layouts/layouts.css */ \"./src/layouts/layouts.css\");\n/* harmony import */ var _components_components_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/components.css */ \"./src/components/components.css\");\n/* harmony import */ var _views_views_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../views/views.css */ \"./src/views/views.css\");\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://scripting-industry/./src/design/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state */ \"./src/state/index.js\");\n/* harmony import */ var _design__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./design */ \"./src/design/index.js\");\n/* harmony import */ var _layouts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layouts */ \"./src/layouts/index.js\");\n/* harmony import */ var _router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./router */ \"./src/router/index.js\");\n\n\n\n\n\n\n\n_state__WEBPACK_IMPORTED_MODULE_0__.default.init();  // Initialize state\n\nconst _stateConfig = _state__WEBPACK_IMPORTED_MODULE_0__.default.getState({ name: 'config' });\nconst _configListener = _stateConfig.listenConfigChanges({ listener: (_data) => {\n  _layouts__WEBPACK_IMPORTED_MODULE_2__.default.init();  // Initialize layouts\n  _layouts__WEBPACK_IMPORTED_MODULE_2__.default.render();\n  \n  _router__WEBPACK_IMPORTED_MODULE_3__.default.init({ container: _layouts__WEBPACK_IMPORTED_MODULE_2__.default.getLayouts().main.getComponent() }); // Initialize router\n  _configListener.unsubscribe();\n}});\n_stateConfig.loadConfig();\n\n//# sourceURL=webpack://scripting-industry/./src/index.js?");

/***/ }),

/***/ "./src/layouts/header.js":
/*!*******************************!*\
  !*** ./src/layouts/header.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var _components_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/modal */ \"./src/components/modal/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst _ENV = {\r\n  myDIV: null,\r\n  modalInfo: null,\r\n  modalCode: null,\r\n};\r\n\r\nconst _HEADER = {\r\n  _env: _ENV,\r\n\r\n  init: () => {\r\n    _ENV.myDIV = document.createElement('div');\r\n    _ENV.myDIV.classList.add(\"header\");\r\n  },\r\n\r\n  getComponent() {\r\n    return _ENV.myDIV;\r\n  },\r\n\r\n  _render: () => {\r\n    const _innerHTML = lit_html__WEBPACK_IMPORTED_MODULE_0__.html`\r\n      <div class=\"title\">\r\n        Scripting industry\r\n      </div>\r\n      <div class=\"links\">\r\n        <a href=\"javascript:void(null);\" @click=${_HEADER._onClickInfo}>\r\n          <div class=\"image info-image\"></div>\r\n        </a>\r\n        <a href=\"javascript:void(null);\" @click=${_HEADER._onClickCode}>\r\n          <div class=\"image github-image\"></div>\r\n        </a>\r\n      </div>\r\n      ${_HEADER._renderModalInfo()}\r\n      ${_HEADER._renderModalCode()}\r\n    `;\r\n    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(_innerHTML, _ENV.myDIV);\r\n  },\r\n\r\n  _renderModalInfo: () => {\r\n    return lit_html__WEBPACK_IMPORTED_MODULE_0__.html`\r\n    <!-- The Modal -->\r\n    <div id=\"modal-info\" class=\"modal info\">\r\n    \r\n      <!-- Modal content -->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <span class=\"close\">&times;</span>\r\n          <h2>About Scripting industry</h2>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>Is a memo pad for develop using scripting languages</p>\r\n          <p>Separates the main topics for scripting and offers techniques for Bash, javascript and python</p>\r\n          <!--\r\n          <p>\r\n            <button type=\"button\" @click=\"${() => _ENV.modalInfo.close()}\">Close</button>\r\n          </p>\r\n          -->\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <!-- <h3>Modal Footer</h3> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    `;\r\n  },\r\n\r\n  _renderModalCode: () => {\r\n    return lit_html__WEBPACK_IMPORTED_MODULE_0__.html`\r\n    <!-- The Modal -->\r\n    <div id=\"modal-code\" class=\"modal info\">\r\n    \r\n      <!-- Modal content -->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <span class=\"close\">&times;</span>\r\n          <h2>Code of Scripting industry</h2>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>This project is open source</p>\r\n          <p>You can find the code in <a href=\"https://github.com/unlevel-team/scripting-industry\" target=\"_blank\">this repository</a></p>\r\n          <!--\r\n          <p>\r\n            <button type=\"button\" @click=\"${() => _ENV.modalInfo.close()}\">Close</button>\r\n          </p>\r\n          -->\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <!-- <h3>Modal Footer</h3> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    `;\r\n  },\r\n\r\n  update: () => {\r\n    _HEADER._render();\r\n  },\r\n\r\n  _onClickInfo: (_event) => {\r\n    if (_ENV.modalInfo === null) {  // Initialize modal for info\r\n      _ENV.modalInfo = new _components_modal__WEBPACK_IMPORTED_MODULE_1__.Modal({ element: _ENV.myDIV.querySelector('#modal-info') });  // TODO: REVIEW CODE 🔍⚠️\r\n    }\r\n    _ENV.modalInfo.open();\r\n  },\r\n\r\n  _onClickCode: (_event) => {\r\n    if (_ENV.modalCode === null) {  // Initialize modal for code\r\n      _ENV.modalCode = new _components_modal__WEBPACK_IMPORTED_MODULE_1__.Modal({ element: _ENV.myDIV.querySelector('#modal-code') });  // TODO: REVIEW CODE 🔍⚠️\r\n    }\r\n    _ENV.modalCode.open();\r\n  },\r\n\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_HEADER);\n\n//# sourceURL=webpack://scripting-industry/./src/layouts/header.js?");

/***/ }),

/***/ "./src/layouts/index.js":
/*!******************************!*\
  !*** ./src/layouts/index.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _header_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header.js */ \"./src/layouts/header.js\");\n/* harmony import */ var _sidebar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sidebar.js */ \"./src/layouts/sidebar.js\");\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./main.js */ \"./src/layouts/main.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst _LAYOUT = {\r\n  _env: {\r\n    initialized: false,\r\n    layouts: {},\r\n    bodyContainer: null,\r\n    mainContainer: null,\r\n  },\r\n\r\n  init: () => {\r\n    const {_env} = _LAYOUT;\r\n    if (_env.initialized === true) { return; }\r\n\r\n    _env.bodyContainer = document.createElement('div');\r\n    _env.bodyContainer.classList.add(\"bodyContainer\");\r\n    document.body.appendChild(_env.bodyContainer);    \r\n\r\n    _header_js__WEBPACK_IMPORTED_MODULE_0__.default.init();\r\n    _env.bodyContainer.appendChild(_header_js__WEBPACK_IMPORTED_MODULE_0__.default.getComponent());\r\n    _env.layouts.header = _header_js__WEBPACK_IMPORTED_MODULE_0__.default;\r\n\r\n    _env.mainContainer = document.createElement('div'); // Contains 'sidebar' and 'main' layers\r\n    _env.mainContainer.classList.add(\"mainContainer\");\r\n    _env.bodyContainer.appendChild(_env.mainContainer);\r\n\r\n    _sidebar_js__WEBPACK_IMPORTED_MODULE_1__.default.init();\r\n    _env.mainContainer.appendChild(_sidebar_js__WEBPACK_IMPORTED_MODULE_1__.default.getComponent());\r\n    _env.layouts.sidebar = _sidebar_js__WEBPACK_IMPORTED_MODULE_1__.default;\r\n    _main_js__WEBPACK_IMPORTED_MODULE_2__.default.init();\r\n    _env.mainContainer.appendChild(_main_js__WEBPACK_IMPORTED_MODULE_2__.default.getComponent());\r\n    _env.layouts.main = _main_js__WEBPACK_IMPORTED_MODULE_2__.default;\r\n\r\n    _env.initialized = true;\r\n  },\r\n\r\n  getLayouts: () => { return _LAYOUT._env.layouts; },\r\n\r\n  render: () => {\r\n    _header_js__WEBPACK_IMPORTED_MODULE_0__.default.update();\r\n    _sidebar_js__WEBPACK_IMPORTED_MODULE_1__.default.update();\r\n    _main_js__WEBPACK_IMPORTED_MODULE_2__.default.update();\r\n  },\r\n\r\n};\r\n\r\n// HOT MODULE REPLACEMENT !!!\r\nif (false) {}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_LAYOUT);\n\n//# sourceURL=webpack://scripting-industry/./src/layouts/index.js?");

/***/ }),

/***/ "./src/layouts/main.js":
/*!*****************************!*\
  !*** ./src/layouts/main.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var _state_location_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/location.js */ \"./src/state/location.js\");\n\n\n\n\n\n\nconst _MAIN = {\n  _env: {\n    myDIV: null,\n  },\n\n  init: () => {\n    const { _env } = _MAIN;\n    _env.myDIV = document.createElement('div');\n    _env.myDIV.classList.add(\"main\");\n    \n    _state_location_js__WEBPACK_IMPORTED_MODULE_1__.default.listenLocationChanges({ listener: _MAIN._onLocationChanges });\n  },\n\n  getComponent() {\n    const { _env } = _MAIN;\n    return _env.myDIV;\n  },\n\n  _render: () => {\n    const { _env } = _MAIN;\n    const _innerHTML = lit_html__WEBPACK_IMPORTED_MODULE_0__.html`<h1>Main</h1>`;\n    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(_innerHTML, _env.myDIV);\n  },\n\n  update: () => {\n   _MAIN._render();\n  },\n\n  _onLocationChanges(_options) {\n    const { myDIV } = _MAIN._env;\n    myDIV.scrollTop = 0;\n  },\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_MAIN);\n\n//# sourceURL=webpack://scripting-industry/./src/layouts/main.js?");

/***/ }),

/***/ "./src/layouts/sidebar.js":
/*!********************************!*\
  !*** ./src/layouts/sidebar.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var _state_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/config.js */ \"./src/state/config.js\");\n/* harmony import */ var _state_location_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/location.js */ \"./src/state/location.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst _ENV = {\r\n  myDIV: null,\r\n  config: null,  \r\n};\r\n\r\nconst _SIDEBAR = {\r\n  _env: _ENV,\r\n\r\n  init: () => {\r\n    _ENV.config = _state_config_js__WEBPACK_IMPORTED_MODULE_1__.default.getConfig()['sidebar'];\r\n\r\n    _ENV.myDIV = document.createElement('div');\r\n    _ENV.myDIV.classList.add(\"sidebar\");\r\n\r\n    _state_location_js__WEBPACK_IMPORTED_MODULE_2__.default.listenLocationChanges({ listener: _SIDEBAR._onLocationChanges });\r\n  },\r\n\r\n  getComponent() {\r\n    return _ENV.myDIV;\r\n  },\r\n\r\n  _render: () => {\r\n    const _innerHTML = lit_html__WEBPACK_IMPORTED_MODULE_0__.html`\r\n      <ul>\r\n        ${_SIDEBAR._renderLinks()}\r\n      </ul>\r\n    `;\r\n    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(_innerHTML, _ENV.myDIV);\r\n  },\r\n\r\n  _renderLinks: () => {\r\n    const { links } = _ENV.config;\r\n    const _result = [];\r\n\r\n    Object.keys(links).forEach(_k => {\r\n      // _result.push( html `<li><a href=\"${links[_k].url}\" data-name=\"${_k}\">${links[_k].text}</a></li>` );\r\n      _result.push( lit_html__WEBPACK_IMPORTED_MODULE_0__.html `<li><a href=\"javascript:void(null);\" @click=${_SIDEBAR._onClickLink} data-name=\"${_k}\">${links[_k].text}</a></li>` );\r\n    });\r\n    \r\n    return _result;\r\n  },\r\n\r\n  update: () => {\r\n    _SIDEBAR._render();\r\n  },\r\n\r\n  _onClickLink: (_event) => {\r\n    const { links } = _ENV.config;\r\n    const _name = _event.target.getAttribute('data-name');\r\n    _state_location_js__WEBPACK_IMPORTED_MODULE_2__.default.changeView({ urlView: links[_name].url });\r\n  },\r\n\r\n  _onLocationChanges(_options) {\r\n    const { myDIV } = _ENV;\r\n    const { title } = _state_location_js__WEBPACK_IMPORTED_MODULE_2__.default.getLocation();\r\n    myDIV.querySelectorAll('li a')\r\n      .forEach((_link) => { _link.classList.remove('is-active'); });\r\n    if (title !== null) {\r\n      myDIV.querySelector(`li a[data-name=\"${title}\"]`)\r\n        .classList.add('is-active');\r\n    }\r\n  },\r\n\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_SIDEBAR);\n\n//# sourceURL=webpack://scripting-industry/./src/layouts/sidebar.js?");

/***/ }),

/***/ "./src/router/index.js":
/*!*****************************!*\
  !*** ./src/router/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _vaadin_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/router */ \"./node_modules/@vaadin/router/dist/vaadin-router.js\");\n/* harmony import */ var _state_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/config.js */ \"./src/state/config.js\");\n/* harmony import */ var _state_location_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/location.js */ \"./src/state/location.js\");\n/* harmony import */ var _views__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../views */ \"./src/views/index.js\");\n\n\n\n\n\n\n\n\nconst _ROUTER = {\n  _env: {\n    basePath: null,\n    container: null,\n    router: null,\n    routerConfig: null,\n  },\n\n  init: ({ basePath = null, container }) => {\n    const { _env } = _ROUTER;\n    _env.basePath = basePath !== null ? basePath : `${window.location.pathname}`;\n    _env.container = container;\n    _env.router = new _vaadin_router__WEBPACK_IMPORTED_MODULE_0__.Router(_env.container, { baseUrl: _env.basePath });\n    _env.routerConfig = _state_config_js__WEBPACK_IMPORTED_MODULE_1__.default.getConfig()['router'];\n\n    _views__WEBPACK_IMPORTED_MODULE_3__.default.init();\n    _ROUTER._initRoutes();\n  },\n\n  _initRoutes: () => {\n    const { router, container, routerConfig } = _ROUTER._env;\n    const _routes = [];\n\n    _routes.push({path: '/', action: (context, commands) => {\n      return commands.redirect(routerConfig.default);\n    }});\n\n    Object.keys(routerConfig.routes).forEach(_k => {\n      _routes.push({\n        path: routerConfig.routes[_k].url, \n        action: (context, commands) => {\n          return _ROUTER._changeView({ name: _k, context });\n        }\n      });\n    });\n\n    router.setRoutes(_routes);\n  },\n\n  _changeView: ({ name, context }) => {\n    const { container } = _ROUTER._env;\n    const _view = _views__WEBPACK_IMPORTED_MODULE_3__.default.getView({ name });\n    _view.forceUpdate ? _view.forceUpdate() : _view.update(); // Force update for the view???\n    \n    container.innerHTML = ''; // Clear container and force update???\n    container.appendChild(_view.component);\n\n    _state_location_js__WEBPACK_IMPORTED_MODULE_2__.default.notifyLocationChange({ title: name, url: context.pathname, id: name });\n\n    return _view.component;\n  },\n};\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_ROUTER);\n\n//# sourceURL=webpack://scripting-industry/./src/router/index.js?");

/***/ }),

/***/ "./src/state/config.js":
/*!*****************************!*\
  !*** ./src/state/config.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n\nconst _ENV = {\n  url: './assets/config.json',\n  subject: null,\n  config: null,\n};\n\nconst _CONFIG = {\n  _env: _ENV,\n\n  init: ({ subject }) => {\n    _CONFIG._env.subject = subject;\n  },\n\n  getConfig: () => _CONFIG._env.config,\n\n  _changeConfig: ({ config }) => {\n    _CONFIG._env.config = config;\n    _CONFIG._notifyConfigChange();\n  },\n\n  loadConfig: () => {\n    if (_CONFIG._env.config !== null) { return; }\n    const { url } = _CONFIG._env;\n    \n    fetch(url)\n    .then(response => response.json())\n    .then(_data => { _CONFIG._changeConfig({ config: _data }); })\n    .catch((_error) => {\n      console.log('Error loading config', _error);  // TODO: REMOVE DEBUG LOG 📏⏳🔍\n    });\n  },\n\n  _notifyConfigChange: () => {\n    const { config, subject } = _CONFIG._env;\n    subject.next({ config });\n  },\n\n  listenConfigChanges: ({ listener }) => {\n    const { subject } = _CONFIG._env;\n    return subject.subscribe({\n      next: listener,\n    });\n  },\n\n  subscribeToConfigChanges: ({ subscriber }) => {\n    const { subject } = _CONFIG._env;\n    return subject.subscribe(subscriber);\n  },\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_CONFIG);\n\n//# sourceURL=webpack://scripting-industry/./src/state/config.js?");

/***/ }),

/***/ "./src/state/context.js":
/*!******************************!*\
  !*** ./src/state/context.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/state/config.js\");\n\n\n\n\n\nconst _ENV = {\n  subject: null,\n  config: null,\n  contexts: null,\n  context: null,\n};\n\nconst _CONTEXT = {\n  _env: _ENV,\n\n  init: ({ subject }) => {\n    _ENV.subject = subject;\n\n    const _configListener = _config_js__WEBPACK_IMPORTED_MODULE_0__.default.listenConfigChanges({ listener: (_data) => {\n      if (_ENV.config !== null) {return;}\n      _ENV.config = _data.config;\n      _ENV.contexts = _ENV.config.contexts;\n      _ENV.context = _ENV.contexts[0];\n      _configListener.unsubscribe();\n    }});\n  },\n\n  changeContext: ({ name }) => {\n    if (_ENV.context === name) { return; } // No change is necessary\n    _ENV.context = name;\n    _CONTEXT._notifyContextChange();\n  },\n\n  getContexts: () => _ENV.contexts,\n  \n  getContext: () => _ENV.context,\n\n  _notifyContextChange: () => {\n    const { context, subject } = _ENV;\n    subject.next({ context });\n  },\n\n  listenContextChanges: ({ listener }) => {\n    return _ENV.subject.subscribe({\n      next: listener,\n    });\n  },\n\n  subscribeToContextChanges: ({ subscriber }) => {\n    return _ENV.subject.subscribe(subscriber);\n  },\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_CONTEXT);\n\n//# sourceURL=webpack://scripting-industry/./src/state/context.js?");

/***/ }),

/***/ "./src/state/index.js":
/*!****************************!*\
  !*** ./src/state/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm5/internal/Subject.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/state/config.js\");\n/* harmony import */ var _location_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./location.js */ \"./src/state/location.js\");\n/* harmony import */ var _topics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./topics.js */ \"./src/state/topics.js\");\n/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./context.js */ \"./src/state/context.js\");\n\n\n\n\n\n\n\n\n\nconst _STATE = {\n  _env: {\n    states: {},\n  },\n\n  init: () => {\n    const { states } = _STATE._env;\n    _config_js__WEBPACK_IMPORTED_MODULE_0__.default.init({ subject: new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subject() });\n    states.config = _config_js__WEBPACK_IMPORTED_MODULE_0__.default;\n    _location_js__WEBPACK_IMPORTED_MODULE_1__.default.init({ subject: new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subject() });\n    states.location = _location_js__WEBPACK_IMPORTED_MODULE_1__.default;\n    _topics_js__WEBPACK_IMPORTED_MODULE_2__.default.init({ subject: new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subject() });\n    states.topics = _topics_js__WEBPACK_IMPORTED_MODULE_2__.default;\n    _context_js__WEBPACK_IMPORTED_MODULE_3__.default.init({ subject: new rxjs__WEBPACK_IMPORTED_MODULE_4__.Subject() });\n    states.context = _context_js__WEBPACK_IMPORTED_MODULE_3__.default;\n  },\n\n  getState: ({ name }) => {\n    return _STATE._env.states[name];\n  },\n\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_STATE);\n\n//# sourceURL=webpack://scripting-industry/./src/state/index.js?");

/***/ }),

/***/ "./src/state/location.js":
/*!*******************************!*\
  !*** ./src/state/location.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/state/config.js\");\n\n\n\n\n\nconst _ENV = {\n  subject: null,\n  location: {\n    basePath: null,\n    title: null, \n    url: null, \n    id: null \n  },\n  state: {},\n};\n\nconst _LOCATION = {\n  _env: _ENV,\n\n  init: ({ subject }) => {\n    _ENV.subject = subject;\n  },\n\n  changeLocation: ({ state = {}, url, id }) => { \n    history.pushState(state, id, url);\n    window.dispatchEvent(new PopStateEvent('popstate'));  // Notify history change\n    // _LOCATION.notifyLocationChange({ state, title, url, id }); // the router do this\n  },\n\n  changeView: ({ urlView }) => {\n    const { basePath } = _config_js__WEBPACK_IMPORTED_MODULE_0__.default.getConfig().router;\n    const { protocol,  host } = window.location;\n    const _baseURL = `${protocol}//${host}${basePath}`;\n    _LOCATION.changeLocation({ url:`${_baseURL}${urlView}`, id:null });\n  },\n\n  getLocation: () => _LOCATION._env.location,\n\n  notifyLocationChange: ({ state = {}, title, url, id }) => {\n    _ENV.state = state;\n    const { location, subject } = _ENV;\n    location.title = title; location.url = url; location.id = id;\n    subject.next({ state, location });\n  },\n\n  listenLocationChanges: ({ listener }) => {\n    const { subject } = _ENV;\n    return subject.subscribe({\n      next: listener,\n    });\n  },\n\n  subscribeToLocationChanges: ({ subscriber }) => {\n    const { subject } = _ENV;\n    return subject.subscribe(subscriber);\n  },\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_LOCATION);\n\n//# sourceURL=webpack://scripting-industry/./src/state/location.js?");

/***/ }),

/***/ "./src/state/topics.js":
/*!*****************************!*\
  !*** ./src/state/topics.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/state/config.js\");\n/* harmony import */ var _utils_data_loader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/data-loader.js */ \"./src/utils/data-loader.js\");\n\n\n\n\n\n\nconst _TOPICS = {\n  _env: {\n    subject: null,\n    config: null,\n    topics: null,\n  },\n\n  init: ({ subject }) => {\n    const { _env } = _TOPICS;\n    _env.subject = subject;\n\n    const _configListener = _config_js__WEBPACK_IMPORTED_MODULE_0__.default.listenConfigChanges({ listener: (_data) => {\n      if (_env.config !== null) {return;}\n      _env.config = _data.config;\n      _env.topics = {};\n      _env.config.topics.forEach(_topic => {\n        _env.topics[_topic] = {};\n      });\n      _configListener.unsubscribe();\n    }});\n  },\n\n  loadTopic: ({ context, name }) => {\n    const { topics, config } = _TOPICS._env;\n\n    return new Promise((_resolve, _reject) => {\n      try {\n        if (_TOPICS.getTopic({ context, name }) !== null) {\n          throw Error(`Topic ${context}/${name} already loaded.`);\n        }\n        const url = config['contexts-config'][context].topics[name]['data-file'];\n        _utils_data_loader_js__WEBPACK_IMPORTED_MODULE_1__.default.loadData({ url: `./assets/data/${url}` })\n        .then(_data => {\n          topics[name][context] = _data.topics[name];\n          _TOPICS._notifyTopicChange({ context, name });\n          _resolve({ topic: topics[name][context] });\n        })\n        .catch(_error => {throw _error});\n      } catch (_error) {\n        _reject(_error);\n      }\n    });\n  },\n\n  getTopic: ({ context, name }) => {\n    const { topics } = _TOPICS._env;\n\n    if (topics[name] === undefined) {\n      throw Error(`Topic ${name} not found.`);\n    }\n\n    return topics[name][context] || null;\n  },\n\n  _notifyTopicChange: ({ context, name }) => {\n    const { topics, subject } = _TOPICS._env;\n    subject.next({ topic: topics[name][context], context, name });\n  },\n\n  listenTopicsChanges: ({ listener }) => {\n    const { subject } = _CONFIG._env;\n    return subject.subscribe({\n      next: listener,\n    });\n  },\n\n  subscribeToTopicsChanges: ({ subscriber }) => {\n    const { subject } = _CONFIG._env;\n    return subject.subscribe(subscriber);\n  },\n};\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_TOPICS);\n\n//# sourceURL=webpack://scripting-industry/./src/state/topics.js?");

/***/ }),

/***/ "./src/utils/data-loader.js":
/*!**********************************!*\
  !*** ./src/utils/data-loader.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var html_entities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! html-entities */ \"./node_modules/html-entities/lib/index.js\");\n\n\n\n\n\nconst _DATA_LOADER = {\n\n  loadData: ({ url }) => {\n    return new Promise((_resolve, _reject) => {\n      _DATA_LOADER._fetchXML({ url })\n      .then(data => {\n        try {\n          const _dataLoaded = _DATA_LOADER._parseXML({data});\n          _resolve(_dataLoaded);\n        } catch (_error) {\n          _reject(Error('Error parsing XML. ' + _error.message));\n        }\n      })\n      .catch(_error => _reject(Error('Error loading URL. ' + _error.message)))\n    });\n  },\n\n  /**\n   * @see https://stackoverflow.com/questions/37693982/how-to-fetch-xml-with-fetch-api\n   */\n  _fetchXML: ({ url }) => {\n    return new Promise((_resolve, _reject) => {\n      fetch(url)\n        .then(response => response.text())\n        .then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\n        .then(data => { _resolve(data); })\n        .catch((_error) => _reject(_error));\n    });\n  },\n\n  _parseXML: ({ data }) => {\n    const _dataLoaded = {topics: {}};\n    try {\n      const _dataElement = data.getElementsByTagName('data')[0];\n      const _topics = _dataElement.getElementsByTagName('topic');\n\n      let _topicData, _conceptName;\n      for (let _topic of _topics) {\n        _topicData = { \n          title: _topic.getElementsByTagName('title')[0].getAttribute('value'),\n          description: _topic.getElementsByTagName('description')[0].textContent.trim(),\n          conceptsOrder: [],\n          concepts: {} \n        };\n        \n        for (let _concept of _topic.getElementsByTagName('concept')) {\n          _conceptName = _concept.getAttribute('name');\n          _topicData.conceptsOrder.push(_conceptName);\n          _topicData.concepts[_conceptName] = {\n            title: _concept.getElementsByTagName('title')[0].getAttribute('value'),\n            docLink: _concept.getElementsByTagName('docLink')[0].getAttribute('value'),\n            description: _concept.getElementsByTagName('description')[0].textContent.trim(),\n          };\n\n          let _codes = []; // Load codes for a concept\n          for (const _code of _concept.getElementsByTagName('code')) {\n            _codes.push({\n                language: _code.getAttribute('language'),\n                code: html_entities__WEBPACK_IMPORTED_MODULE_0__.AllHtmlEntities.encode(_code.textContent.trim())\n              });\n          }\n          _topicData.concepts[_conceptName].codes = _codes;\n        }\n        \n        _dataLoaded.topics[_topic.getAttribute('name')] = {..._topicData};\n      }\n      return _dataLoaded;\n    } catch (_err) {\n      const _error = Error('Error parsing XML. ' + _err.message);\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(undefined, _error)\n      }\n      throw _error;\n    }\n  },\n};\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_DATA_LOADER);\n\n//# sourceURL=webpack://scripting-industry/./src/utils/data-loader.js?");

/***/ }),

/***/ "./src/views/index.js":
/*!****************************!*\
  !*** ./src/views/index.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _state_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../state/config.js */ \"./src/state/config.js\");\n/* harmony import */ var _state_location_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../state/location.js */ \"./src/state/location.js\");\n/* harmony import */ var _state_context_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/context.js */ \"./src/state/context.js\");\n/* harmony import */ var _view_core_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./view-core.js */ \"./src/views/view-core.js\");\n/* harmony import */ var _components_pickerForConcept__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/pickerForConcept */ \"./src/components/pickerForConcept/index.js\");\n/* harmony import */ var _components_pickerForContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/pickerForContext */ \"./src/components/pickerForContext/index.js\");\n\n\n\n\n\n\n\n\n\n\nconst _VIEWS = {\n  _env: {\n    activeView: null,\n    views: {},\n  },\n\n  init: () => {\n    _state_location_js__WEBPACK_IMPORTED_MODULE_1__.default.listenLocationChanges({ listener: _VIEWS._onLocationChanges });\n    _state_context_js__WEBPACK_IMPORTED_MODULE_2__.default.listenContextChanges({ listener: _VIEWS._onContextChanges });\n\n    _components_pickerForConcept__WEBPACK_IMPORTED_MODULE_4__.default.init();\n    _components_pickerForContext__WEBPACK_IMPORTED_MODULE_5__.default.init();\n    _VIEWS._initTopicsViews();\n  },\n\n  _initTopicsViews: () => {\n    const _config = _state_config_js__WEBPACK_IMPORTED_MODULE_0__.default.getConfig();\n    const { topics, contexts } = _config;\n    const { _env } = _VIEWS\n\n    const _views = {};\n    topics.forEach(_topic => {\n      const _topicDATA = {\n        topicName: _topic,\n        contexts: [],\n      };\n      contexts.forEach(_context => {\n        if (_config['contexts-config'][_context].topics[_topic] !== undefined) {\n          _topicDATA.contexts.push(_context);\n        }\n      });\n      _views[_topic] = new _view_core_js__WEBPACK_IMPORTED_MODULE_3__.ViewCore(_topicDATA);\n      _views[_topic].init();\n    });\n\n    _env.views = _views;\n  },\n\n  getView: ({ name }) => {\n    const { views } = _VIEWS._env;\n    return views[name];\n  },\n\n  _onLocationChanges(_options) {\n    const { _env } = _VIEWS;\n    const { title } = _state_location_js__WEBPACK_IMPORTED_MODULE_1__.default.getLocation();\n\n    if (_env.activeView !== null) {\n      _VIEWS.getView({ name: _env.activeView }).deactivate();\n    }\n    _env.activeView = title;\n    const _view = _VIEWS.getView({ name: title });\n    _view.activate();\n\n    const context = _state_context_js__WEBPACK_IMPORTED_MODULE_2__.default.getContext();\n    if (_view._env.contexts.includes(context)) {\n      _view.loadTopic({ context });\n    } else {\n      _state_context_js__WEBPACK_IMPORTED_MODULE_2__.default.changeContext({ name: _view._env.contexts[0] });  // Load 'default' context\n    }\n  },\n\n  _onContextChanges(_options) {\n    const { activeView } = _VIEWS._env;\n    const { context } = _options;\n    if (activeView === null) { return; }\n    _VIEWS.getView({ name: activeView }).loadTopic({ context });\n  },\n};\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_VIEWS);\n\n//# sourceURL=webpack://scripting-industry/./src/views/index.js?");

/***/ }),

/***/ "./src/views/view-core.js":
/*!********************************!*\
  !*** ./src/views/view-core.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ViewCore\": () => (/* binding */ ViewCore)\n/* harmony export */ });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var _components_pickerForContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/pickerForContext */ \"./src/components/pickerForContext/index.js\");\n/* harmony import */ var _components_pickerForConcept__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/pickerForConcept */ \"./src/components/pickerForConcept/index.js\");\n/* harmony import */ var _views_common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./views-common.js */ \"./src/views/views-common.js\");\n\n\n\n\n\n\n\n/**\n * The core structure for a 'View'\n */\nclass ViewCore {\n  constructor({ topicName, contexts }) {\n    this._env = {\n      myDIV: null,\n      topicName, \n      contexts,\n    };\n\n    this.init = this.init.bind(this);\n    this.update = this.update.bind(this);\n    this.forceUpdate = this.forceUpdate.bind(this);\n  }\n\n  init() {\n    const { _env } = this;\n    const { topicName: topic, contexts } = _env;\n    _env.myDIV = document.createElement('article');\n    _env.myDIV.classList.add(\"topic\");\n    _env.myDIV.setAttribute(\"data-topic\", _env.topicName);\n\n    _views_common_js__WEBPACK_IMPORTED_MODULE_3__.default.initView({\n      view: this,\n      topic,\n      contexts,\n    });\n  }\n\n  get component() { return this._env.myDIV; }\n\n  static renderView({ view }) {\n    const { _env } = view;\n    const { title } = _env.topicData || {};\n    const _innerHTML = lit_html__WEBPACK_IMPORTED_MODULE_0__.html`\n      <h1>${title}</h1>\n      ${_components_pickerForContext__WEBPACK_IMPORTED_MODULE_1__.default.getComponent()}\n      ${_components_pickerForConcept__WEBPACK_IMPORTED_MODULE_2__.default.getComponent()}\n      ${_views_common_js__WEBPACK_IMPORTED_MODULE_3__.default.renderConcepts(_env)}\n    `;\n    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(_innerHTML, _env.myDIV);\n  }\n\n  _render() {\n    ViewCore.renderView({ view: this });\n  }\n\n  update() {\n    _components_pickerForContext__WEBPACK_IMPORTED_MODULE_1__.default.update(this._env);\n    _components_pickerForConcept__WEBPACK_IMPORTED_MODULE_2__.default.update({ view: this });\n    _views_common_js__WEBPACK_IMPORTED_MODULE_3__.default.updateConcepts(this._env);\n    this._render();\n  }\n\n  forceUpdate() {\n    (0,lit_html__WEBPACK_IMPORTED_MODULE_0__.render)(lit_html__WEBPACK_IMPORTED_MODULE_0__.html``, this._env.myDIV);\n    this.update();\n  }\n}\n\n//# sourceURL=webpack://scripting-industry/./src/views/view-core.js?");

/***/ }),

/***/ "./src/views/views-common.js":
/*!***********************************!*\
  !*** ./src/views/views-common.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lit_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit-html */ \"./node_modules/lit-html/lit-html.js\");\n/* harmony import */ var _components_sectionForConcept__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/sectionForConcept */ \"./src/components/sectionForConcept/index.js\");\n/* harmony import */ var _state_topics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../state/topics.js */ \"./src/state/topics.js\");\n\n\n\n\n\n\n\nconst _COMMON = {\n  initView: ({ view }) => {\n    view._env = { // update the view environment ⚠️⚠️⚠️\n      ...view._env,\n      active: false,\n      topicData: null,\n      concepts: {},\n    };\n\n    view.activate = () => { view._env.active = true; };\n    view.deactivate = () => { view._env.active = false; };\n    view.loadTopic = ({ context }) => { _COMMON.loadTopic({ view, context }); };\n  },\n\n  loadTopic: ({ view, context }) => {\n    const { _env } = view;\n    const { topicName } = _env;\n\n    let _topic = _state_topics_js__WEBPACK_IMPORTED_MODULE_2__.default.getTopic({ context, name: topicName });\n    if (_topic !== null) {\n      _env.topicData = _topic;\n      _COMMON.initConcepts(_env);\n      view.update();\n      return;\n    }\n\n    _state_topics_js__WEBPACK_IMPORTED_MODULE_2__.default.loadTopic({ context, name: topicName })\n    .then(({ topic }) => {\n      _env.topicData = topic;\n      _COMMON.initConcepts(_env);\n      view.update();\n    })\n    .catch(_error => { throw _error; })\n  },\n\n  initConcepts: ({ concepts, topicData }) => {\n    if (topicData === null) { return; } // TODO: REVIEW CODE 🔍⚠️ Data is not initialized \n\n    topicData.conceptsOrder.forEach((_conceptName) => {\n      concepts[_conceptName] = new _components_sectionForConcept__WEBPACK_IMPORTED_MODULE_1__.SectionForConcept({ name: _conceptName, data: topicData.concepts[_conceptName] });\n    });\n  },\n\n  updateConcepts: ({ concepts, topicData }) => {\n    if (topicData === null) { return; } // TODO: REVIEW CODE 🔍⚠️ Data is not initialized \n\n    topicData.conceptsOrder.forEach((_conceptName) => {\n      concepts[_conceptName].update();\n    });\n  },\n\n  renderConcepts: ({ concepts, topicData }) => {\n    if (topicData === null) { return; } // TODO: REVIEW CODE 🔍⚠️ Data is not initialized \n\n    let _html = [];\n\n    topicData.conceptsOrder.forEach((_conceptName) => {\n      _html.push(lit_html__WEBPACK_IMPORTED_MODULE_0__.html `${concepts[_conceptName].component}`);\n    });\n\n    return _html;\n  },\n\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_COMMON);\n\n//# sourceURL=webpack://scripting-industry/./src/views/views-common.js?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["shared"], () => (__webpack_exec__("./src/index.js")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);