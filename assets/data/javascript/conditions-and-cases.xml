<?xml version="1.0" encoding="UTF-8"?>
<data>
  <topic name="conditions-and-cases">
    <title value="Conditions and cases on javascript" />
    <!-- <docLink value="https://www.w3schools.com/tags/tag_title.asp" /> -->
    <description>
      <![CDATA[
Conditions and cases on javascript
      ]]>
    </description>
    <concept name="comparison-operators">
      <title value="Comparison Operators" />
      <docLink value="https://www.w3schools.com/js/js_comparisons.asp" />
      <description>
        <![CDATA[
Comparison operators are used in logical statements to determine equality or difference between variables or values. <br>
<ul>
  <li><code>==</code> equal to</li>
  <li><code>===</code> equal value and equal type</li>
  <li><code>!=</code> not equal</li>
  <li><code>!==</code> not equal value or not equal type</li>
  <li><code>&gt;</code> greater than</li>
  <li><code>&lt;</code> less than</li>
  <li><code>&gt;=</code> greater than or equal to</li>
  <li><code>&lt;=</code> less than or equal to</li>
</ul>
        ]]>
      </description>
    </concept>
    <concept name="logical-operators">
      <title value="Logical Operators" />
      <docLink value="https://www.w3schools.com/js/js_comparisons.asp" />
      <description>
        <![CDATA[
Logical operators are used to determine the logic between variables or values. <br>
<ul>
  <li><code>&amp;&amp;</code> and</li>
  <li><code>||</code> or</li>
  <li><code>!</code> not</li>
</ul>
        ]]>
      </description>
    </concept>
    <concept name="conditional-ternary-operators">
      <title value="Conditional (Ternary) Operator" />
      <docLink value="https://www.w3schools.com/js/js_comparisons.asp" />
      <description>
        <![CDATA[
JavaScript also contains a conditional operator that assigns a value to a variable based on some condition. <br>
<code>variablename = (condition) ? value1:value2</code> <br>
<code>let voteable = (age < 18) ? "Too young":"Old enough";</code>
        ]]>
      </description>
    </concept>
    <concept name="if">
      <title value="The if Statement" />
      <docLink value="https://www.w3schools.com/js/js_comparisons.asp" />
      <description>
        <![CDATA[
Use the <code>if</code> statement to specify a block of JavaScript code to be executed if a condition is true. <br>
Use the <code>else</code> statement to specify a block of code to be executed if the condition is false. <br>
Use the <code>else if</code> statement to specify a new condition if the first condition is false. <br>

        ]]>
      </description>
      <code language="javascript">
        <![CDATA[
if (condition1) {
  //  block of code to be executed if condition1 is true
} else if (condition2) {
  //  block of code to be executed if the condition1 is false and condition2 is true
} else {
  //  block of code to be executed if the condition1 is false and condition2 is false
}
        ]]>
      </code>
      <code language="javascript">
        <![CDATA[
if (time < 10) {
  greeting = "Good morning";
} else if (time < 20) {
  greeting = "Good day";
} else {
  greeting = "Good evening";
}
        ]]>
      </code>
    </concept>
    <concept name="switch-statement">
      <title value="Switch Statement" />
      <docLink value="https://www.w3schools.com/js/js_switch.asp" />
      <description>
        <![CDATA[
The <code>switch</code> statement is used to perform different actions based on different conditions. <br>
Use the <code>switch</code> statement to select one of many code blocks to be executed. <br>
<ul>
  <li>The switch expression is evaluated once.</li>
  <li>The value of the expression is compared with the values of each case.</li>
  <li>If there is a match, the associated block of code is executed.</li>
  <li>If there is no match, the default code block is executed.</li>
</ul>
When JavaScript reaches a <code>break</code> keyword, it breaks out of the switch block.
This will stop the execution inside the switch block.
It is not necessary to break the last case in a switch block. The block breaks (ends) there anyway. <br>
The <code>default</code> keyword specifies the code to run if there is no case match.
        ]]>
      </description>
      <code language="javascript">
        <![CDATA[
switch (new Date().getDay()) {
  case 4:
  case 5:
    text = "Soon it is Weekend";
    break;
  case 0:
  case 6:
    text = "It is Weekend";
    break;
  default:
    text = "Looking forward to the Weekend";
}
        ]]>
      </code>
    </concept>
  </topic>
</data>