<?xml version="1.0" encoding="UTF-8"?>
<data>
  <topic name="modules">
    <title value="Modules on python" />
    <!-- <docLink value="https://www.w3schools.com/tags/tag_title.asp" /> -->
    <description>
      <![CDATA[
Modules on python
      ]]>
    </description>
    <concept name="modules">
      <title value="Modules" />
      <docLink value="https://www.w3schools.com/python/python_modules.asp" />
      <description>
        <![CDATA[
Consider a module to be the same as a <strong>code library</strong>.<br>
<strong>A file containing a set of functions</strong> you want to include in your application.<br>
To create a module just save the code you want in a file with the file extension <code>.py</code><br>
Use a module by using the <code>import</code> statement<br>
The module can contain functions, as already described, but also variables of all types (arrays, dictionaries, objects etc).<br>
You can create an <strong>alias</strong> when you import a module, by using the <code>as</code> keyword.<br>
There is a built-in function to <strong>list all the function names (or variable names) in a module</strong>. The <code>dir()</code> function.<br>
You can choose to <strong>import only parts from a module</strong>, by using the <code>from</code> keyword.<br>
        ]]>
      </description>
      <code language="python">
        <![CDATA[
# file "mymodule.py" 

def greeting(name):
  print("Hello, " + name)

person1 = {
  "name": "John",
  "age": 36,
  "country": "Norway"
}
        ]]>
      </code>
      <code language="python">
        <![CDATA[
import mymodule as mx

a = mx.person1["age"]
print(a)
mx.greeting("Jonathan")
        ]]>
      </code>
      <code language="python">
        <![CDATA[
import platform
from mymodule import person1

print (person1["age"])

x = dir(platform) # list all the function names (or variable names)
print(x)
        ]]>
      </code>
    </concept>
  </topic>
</data>