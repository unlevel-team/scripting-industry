<?xml version="1.0" encoding="UTF-8"?>
<data>
  <topic name="variables">
    <title value="Python variables" />
    <!-- <docLink value="https://www.w3schools.com/tags/tag_title.asp" /> -->
    <description>
      <![CDATA[
        The Python variables
      ]]>
    </description>
    <concept name="variables">
      <title value="Variables" />
      <docLink value="https://www.w3schools.com/python/python_variables.asp" />
      <description>
        <![CDATA[
Python has no command for declaring a variable.<br>
A variable is created the moment you first assign a value to it.<br>
Variables do not need to be declared with any particular type, and can even change type after they have been set.
        ]]>
      </description>
      <code language="python">
        <![CDATA[
x = 5
y = "John"
print(x)
print(y)
        ]]>
      </code>
      <code language="python">
        <![CDATA[
x = 4       # x is of type int
x = "Sally" # x is now of type str
print(x)
        ]]>
      </code>
    </concept>
    <concept name="casting">
      <title value="Casting" />
      <docLink value="https://www.w3schools.com/python/python_variables.asp" />
      <description>
        <![CDATA[
If you want to specify the data type of a variable, this can be done with casting.
        ]]>
      </description>
      <code language="python">
        <![CDATA[
x = str(3)    # x will be '3'
y = int(3)    # y will be 3
z = float(3)  # z will be 3.0
        ]]>
      </code>
    </concept>
    <concept name="get-the-type">
      <title value="Get the Type" />
      <docLink value="https://www.w3schools.com/python/python_variables.asp" />
      <description>
        <![CDATA[
You can get the data type of a variable with the <code>type()</code> function.
        ]]>
      </description>
      <code language="python">
        <![CDATA[
x = 5
y = "John"
print(type(x))
print(type(y))
        ]]>
      </code>
    </concept>
    <concept name="single-or-double-quotes">
      <title value="Single or Double Quotes?" />
      <docLink value="https://www.w3schools.com/python/python_variables.asp" />
      <description>
        <![CDATA[
String variables can be declared either by using single or double quotes.
        ]]>
      </description>
      <code language="python">
        <![CDATA[
x = "John"
# is the same as
x = 'John'
        ]]>
      </code>
    </concept>
    <concept name="case-sensitive">
      <title value="Case-Sensitive" />
      <docLink value="https://www.w3schools.com/python/python_variables.asp" />
      <description>
        <![CDATA[
String variables can be declared either by using single or double quotes.
        ]]>
      </description>
      <code language="python">
        <![CDATA[
a = 4
A = "Sally"
#A will not overwrite a
        ]]>
      </code>
    </concept>
    <concept name="variable-names">
      <title value="Variable Names" />
      <docLink value="https://www.w3schools.com/python/python_variables_names.asp" />
      <description>
        <![CDATA[
A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume). Rules for Python variables:<br>
<ul>
  <li>A variable name must start with a letter or the underscore character</li>
  <li>A variable name cannot start with a number</li>
  <li>A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )</li>
  <li>Variable names are case-sensitive (age, Age and AGE are three different variables)</li>
</ul>
        ]]>
      </description>
      <code language="python">
        <![CDATA[
myvar = "John"
my_var = "John"
_my_var = "John"
myVar = "John"
MYVAR = "John"
myvar2 = "John"
        ]]>
      </code>
    </concept>
    <concept name="assign-multiple-variables">
      <title value="Assign Multiple Values" />
      <docLink value="https://www.w3schools.com/python/python_variables_multiple.asp" />
      <description>
        <![CDATA[
Python allows you to assign values to multiple variables in one line.
        ]]>
      </description>
      <code language="python">
        <![CDATA[
x, y, z = "Orange", "Banana", "Cherry"
print(x)
print(y)
print(z)
        ]]>
      </code>
      <code language="python">
        <![CDATA[
# assign the same value to multiple variables in one line
x = y = z = "Orange"
print(x)
print(y)
print(z)
        ]]>
      </code>
      <code language="python">
        <![CDATA[
# Unpack a Collection
fruits = ["apple", "banana", "cherry"]
x, y, z = fruits
print(x)
print(y)
print(z)
        ]]>
      </code>
    </concept>
    <concept name="global-variables">
      <title value="Global Variables" />
      <docLink value="https://www.w3schools.com/python/python_variables_global.asp" />
      <description>
        <![CDATA[
Variables that are created outside of a function (as in all of the examples above) are known as global variables.<br>
Global variables can be used by everyone, both inside of functions and outside.<br>
If you create a variable with the same name inside a function, this variable will be local, and can only be used inside the function. 
The global variable with the same name will remain as it was, global and with the original value.<br>
To create a global variable inside a function, you can use the <code>global</code> keyword.
        ]]>
      </description>
      <code language="python">
        <![CDATA[
x = "awesome"

def myfunc():
  print("Python is " + x)

myfunc()
        ]]>
      </code>
      <code language="python">
        <![CDATA[
x = "awesome"

def myfunc():
  x = "fantastic"
  print("Python is " + x)

myfunc()

print("Python is " + x)
        ]]>
      </code>
      <code language="python">
        <![CDATA[
x = "awesome"

def myfunc():
  global x
  x = "fantastic"

myfunc()

print("Python is " + x)
        ]]>
      </code>
    </concept>
  </topic>
</data>